2013-01-29  Adhemerval Zanella  <azanella@linux.vnet.ibm.com>

	* sysdeps/powerpc/dfpu/numdigits.h (left_justify): Fix for LE targets and
	cleanup VSX code.
	(DECIMAL_BIAS): Undef before define to avoid compiler warnings with
	multiple file inclusions.
	(DECIMAL_BIAS_DOUBLE): Likewise.

2013-01-29  Adhemerval Zanella  <azanella@linux.vnet.ibm.com>

	* sysdeps/powerpc/dfpu/numdigits.h (setexp): Fix endianess when setting
	the exponent.

2013-01-29  Adhemerval Zanella  <azanella@linux.vnet.ibm.com>

	* libdecnumber/dpd/decimal128.c (decimal128FromNumber): Fix LE internal
	data handling.
	(decimal128ToNumber): Likewise.
	* libdecnumber/dpd/decimal32.c (decimal32FromNumber): Likewise.
	(decimal32ToNumber): Likewise.
	* libdecnumber/dpd/decimal64.c (decimal64FromNumber): Likewise.
	(decimal64ToNumber): Likewise.

2013-01-29  Adhemerval Zanella  <azanella@linux.vnet.ibm.com>

	* tests/test-logd.c: Add more coverage with tests for logd32 and logd128.
	Also fix file indentation.

2013-01-29  Adhemerval Zanella  <azanella@linux.vnet.ibm.com>

	* dfptypeconv.c (___ieee_32_to_host): Optimize to use word or doublewords
	loads store by using compiler builtins.
	(___ieee_64_to_host): Likewise.
	(___ieee_128_to_host): Likewise.
	(___ieee_32_to_host): Likewise.
	(___ieee_64_to_host): Likewise.
	(___ieee_128_to_host): Likewise.

2013-01-28  Adhemerval Zanella  <azanella@linux.vnet.ibm.com>

	* tests/test-amort.c (main): Fix compile warnings.
	* tests/test-param.c (param_test): Likewise.
	(main): Likewise.

2013-01-24  Adhemerval Zanella  <azanella@linux.vnet.ibm.com>

	* sysdeps/powerpc/dfpu/numdigits.h (numdigits): Define the decimal bias
	masks in an endianess neutral way.

2013-01-24  Adhemerval Zanella  <azanella@linux.vnet.ibm.com>

	* sysdeps/powerpc/dfpu/fe_decround.c (__fe_dec_getround): Fix endianess
	issues when getting the rounding mode.
	* sysdeps/powerpc/fpu/fenv_libdfp.h (fenv_union_t): (fenv_union_t): 
	Replace int array with long long.
	* include/convert.h (DFP_TEST_EXCEPTIONS): Likewise.
	(DFP_CLEAR_EXCEPTIONS): Likewise.

2013-01-24  Adhemerval Zanella  <azanella@linux.vnet.ibm.com>

	* sysdeps/powerpc/powerpc32/power8/Implies: New file: POWER8 support.
	* sysdeps/powerpc/powerpc32/power8/fpu/Implies: New file:
	* sysdeps/powerpc/powerpc64/power8/Implies: New file.
	* sysdeps/powerpc/powerpc64/power8/fpu/Implies: New file.

2013-01-18  Adhemerval Zanella  <azanella@linux.vnet.ibm.com>

	* include/convert.h (DEST_INFINITY): Define correct builtin for double
	and long double.
	(DEST_NAN): Likewise.
	(PREFIXED_FUNCTION_NAME): Reformat.
	* base-math/extendddtf.c (extendddtf): Add volatile to double
	operations to avoid long double optimizations and recursive calls.
	* base-math/extendsdtf.c (extendddtf): Likewise.

2013-01-18  Adhemerval Zanella  <azanella@linux.vnet.ibm.com>

	* libdecnumber/decNumber.c (decSetSubnormal): Remove unused variable.
	* strtod32.c (strtod32): Likewise.

2013-01-17  Adhemerval Zanella  <azanella@linux.vnet.ibm.com>

	* sysdeps/soft-dfp/dpd/numdigits.h (getexp): Simplify code and fix
	issues exp is DECIMAL_BIAS;

2013-01-17  Adhemerval Zanella  <azanella@linux.vnet.ibm.com>

	* ieee754r/isfinited32.c (__finited32d): Change implementation to
	follow isinf and isnan by checking the bits directly.
	* sysdeps/powerpc/dfpu/is_template.h (__isfinite32d): Simplify
	implemenation by checking the cr0 results using C instead of assembly.
	* tests/test-isfinite.c: Unify tests by removing negative results for
	PowerPC HD DFP.

2013-01-17  Adhemerval Zanella  <azanella@linux.vnet.ibm.com>

	* ieee754r/isinfd32.c (__isinfd32): Return -1 for minus infinity and
	+1 for plus infinity.
	* sysdeps/powerpc/dfpu/isinfd128.c (__isinfd128): Use the isinfd32.c
	implementation instead of the is_template.h.
	* sysdeps/powerpc/dfpu/isinfd32.c (__isinfd32): Simplify
	implementation by checking cr1 result and result -1 for minus infinity
	and +1 for plus infinity.
	* tests/test-isinf.c: Add check for minux infinity.

2013-01-14  Adhemerval Zanella  <azanella@linux.vnet.ibm.com>

	* dfptypeconv.c (___host_to_ieee_32): Fix endian macro check.
	(___host_to_ieee_64): Likewise.
	(___host_to_ieee_128): Likewise.
	(___ieee_32_to_host): Likewise.
	(___ieee_64_to_host): Likewise.
	(___ieee_128_to_host): Likewise.
	* ieee754r/fpclassifyd32.c (fpclassify): Likewise.
	* ieee754r/isinfd32.c (isinf): Likewise.
	* ieee754r/isnand32.c (isnan): Likewise.

2013-01-14  Adhemerval Zanella  <azanella@linux.vnet.ibm.com>

	* config.guess: Add powerpc LE support.
	* configure.ac: Likewise.
	* scripts/config.guess: Likewise.
	* configure: Likewise.
	* sysdeps/powerpc/powerpc64/sysdep.h: Sync with GLIBC one for powerpc
	LE support.

2012-09-12  Ryan S. Arnold  <rsa@linux.vnet.ibm.com>

	* Makefile.in (distclean): Add as rule to remove files generated by
	configure.

2012-08-08  Ryan S. Arnold  <rsa@linux.vnet.ibm.com>

	* README.user: Added new section on compliance With ISO/IEC TR 24732,
	the C++ DFP Draft Technical Report, including instructions on how to
	use (ios::fixed | ios::scientific) as ios_base::fmtflags in order to
	get fully encoded precision in output string representation.

2012-08-07  Ryan S. Arnold  <rsa@linux.vnet.ibm.com>

	* tests/test-printf.c: Add missing 'D' to a/A conv tests.
	* tests/scaffold.c: Correct comments for _OSC and added a/A support.
	* tests/test-ostream.cpp: Modified expectations such that a/A ignores
	precision and always uses the num of significant digits in the
	mantissa when output.
	* tests/test-ostream-g-spec.cpp: Removed unnecessary define that used
	to be used to get g/G support.
	* dfp/decimal/decimal (FIND_DEC_MANT_DIG): Remove ".*" from default
	string string.
	(LIBDFP_META): Make g/G spec default. Enable a/A spec by checking
	flags for ios::fixed | ios::scientific. Condense uppercase/lowercase
	check. Don't call printf with a precision specifier if a/A is the
	desires spec conv.

2012-07-27  Ryan S. Arnold  <rsa@linux.vnet.ibm.com>

	* tests/test-negate.c: New testcase.
	* Makefile.in (libdfp_c_tests): Add test-negate.

2012-07-27  Ryan S. Arnold  <rsa@linux.vnet.ibm.com>
	* Makefile.in (test-printf.os, test-strtod.os): New rules to depend on
	printf_dfp.os and strtod[32|64|128].os respectively.
	* strtod128.c (__DEC_MANT_DIG__, __DEC_MAX_EXP__, __DEC_MIN_EXP__):
	Define to _Decimal128 values.
	* tests/test-strtod.c: Added tests near __DEC*_MAX_EXP__ and
	__DEC*_MIN_EXP__.
	* strtod64.c (__DEC_MANT_DIG__, __DEC_MAX_EXP__, __DEC_MIN_EXP__):
	Define to _Decimal64 values.
	* sysdeps/powerpc/dfpu/numdigits.h (left_justify): Fix VSX case by
	replacing xxlxor with xxlor insn.
	(getexp): Replace stfwix with stfd to prevent erroneous sign extend.
	* sysdeps/soft-dfp/dpd/numdigits.h (getexp): Make return value
	congruent with hardware-dfp for NaN.
	* strtod32.c (__DEC_MANT_DIG__, __DEC_MAX_EXP__, __DEC_MIN_EXP__):
	Define to _Decimal32 values.
	(FUNCTION_L_INTERNAL): Add left_justify call if proposed exponent is
	sufficiently close to __DEC*_MAX_EXP__.  Add zero return if proposed
	exponent is smaller than __DEC*_MIN_EXP__.

2012-07-25  Ryan S. Arnold  <rsa@linux.vnet.ibm.com>

	* Makefile.in (libdfp_c_tests): Added test-getexp.
	* tests/test-getexp.c: New test.
	* tests/test-decode.c (d64types): Added test for __DEC64_MAX__ and
	__DEC64_MIN__.
	* sysdeps/powerpc/dfpu/numdigits.h (getexpd[32|64|128]): Fixed in
	order to prevent erroneous sign extension due to using stfiwx.

2012-07-25  Ryan S. Arnold  <rsa@linux.vnet.ibm.com>

	* sysdeps/powerpc/dfpu/numdigits.h: Cleaned up inline asm DEC_TYPE
	declarations.  Removed redundant macros.  Merged macros under similar
	guards.

2012-07-25  Ryan S. Arnold  <rsa@linux.vnet.ibm.com>

	* sysdeps/powerpc/dfpu/numdigits.h (numdigits*): Fix inline asm to
	place result of drrnd[q] into DEC_TYPE instead of double.  Update
	copyright years to range.
	* tests/test-decode.c: Update copyright years to range.
	* tests/test-param.c: Likewise.
	* tests/test-printf.c: Likewise.
	* tests/test-numdigits.c: Likewise.
	* tests/test-istream.cpp: Likewise.
	* tests/test-strtod.c: Likewise.
	* sysdeps/dpd/dpd-private.c: Likewise.
	* printf_dfp.c: Fix erroneous test for _Decimal64.  Update copyright
	years to range.

2012-07-24  Ryan S. Arnold  <rsa@linux.vnet.ibm.com>

	* Makefile.in (check): Add printf_dfp.o dependency to check in order to
	have make check automatically rebuild libdfp is printf_dfp.c has
	changed.
	* tests/test-decode.c: Add tests for decoding numbers with high
	exponents near __DEC*_MAX_EXP__.
	* tests/test-param.c (param_test): Remove unnecessary assingments.
	* tests/test-printf.c: Add tests for __DEC64_MAX__.
	* tests/test-numdigits.c: Add tests for __DEC64_MAX__ and numbers
	approaching __DEC*_MAX_EXP__.
	* tests/test-GCC-PR52140.c (main): Remove unnecessary assignments.
	* tests/test-ostream.cpp: Formatting.
	* tests/debug-test.sh: Add ./ as a path prefix.
	* sysdeps/powerpc/dfpu/numdigits.h (numdigitsd*): Fix for numbers with
	exponent approaching __DEC*_MAX_EXP__ by biasing the exponent toward
	zero.
	* sysdeps/dpd/dpd-private.c: Formatting.
	* TODO: New items.
	* printf_dfp.c (__printf_dfp): Fix for g/G specifier that converst to
	f/F form.  Fix for a/A when the user supplied precision is 0, i.e.
	%.Ha.

2012-02-06  Ryan S. Arnold  <rsa@linux.vnet.ibm.com>

	* Makefile.in (libdfp_c_tests): Add test-GCC-PR52140.c.
	* tests/test-istream.cpp: Comment out NaN tests.  Two nans can't be
	compared.
	* tests/test-GCC-PR52140.c: New testcase for ICE.
	* TODO: Add item to upgrade libdecnumber version.

2012-02-04  Ryan S. Arnold  <rsa@linux.vnet.ibm.com>

	* Makefile.in (install-readme): New target.
	(install): Consolidated by making install-headers and install-readme
	as dependent rules.
	* README.maintainer: Updated info on Versioning.
	* README.user: Added discussion on __STDC_DEC_FP__
	* README.developer: Updated info on Versioning.

2012-01-17  Ryan S. Arnold  <rsa@linux.vnet.ibm.com>

	* sysdeps/powerpc/powerpc32/power6x/Implies: Points to power6.
	* sysdeps/powerpc/powerpc32/power6x/fpu/Implies: Points to power6.
	* sysdeps/powerpc/powerpc64/power6x/Implies: Points to power6.
	* sysdeps/powerpc/powerpc64/power6x/fpu/Implies: Points to power6.

2012-01-13  Ryan S. Arnold  <rsa@linux.vnet.ibm.com>

	* Makefile.in (libdfp_cxx_tests): Add test-ostream-g-spec test.
	* tests/test-ostream-g-spec.cpp: New file to test decimal/decimal's
	_LIBDFP_G_CONV_SPEC guard.
	* tests/test-printf.c: Add newly discovered %DDg failures.
	* tests/scaffold.c (_OSC_P): Add comment regarding
	_LIBDFP_G_CONV_SPEC.
	* tests/test-istream.cpp: Removed unused variable.
	* README.user: Update with information about NOT using #include
	<dfp/*header*>.
	* dfp/float.h: Remove commented out decimal class predeclares.
	* dfp/decimal/decimal: Move #include <float.h> to before #include_next
	<decimal/decimal> to prevent missing _Decimal[32|64|128] definition
	errors.

2012-01-10  Ryan S. Arnold  <rsa@linux.vnet.ibm.com>

	* Makefile.in (libdfp_cxx_tests): Added test-istream.
	* tests/scaffold.c (_ISC _ISC_P): Added new istream compare macros
	conditional on #ifdef __cplusplus.
	* tests/test-istream.cpp: New test for operator>>.
	* tests/test-strtod.c: Added a new value to test.
	* dfp/float.h: Correct _Decimal[32|64|128] declarations.
	* dfp/decimal/decimal: Added operator>> support for decimal[32|64|128]
	C++ decimal floating point types.
	* README.user: Updated information on operator<< and operator>>
	support.

2011-12-14  Ryan S. Arnold  <rsa@linux.vnet.ibm.com>

	* tests/test-log10d.c: Added missing #include "decode.h".
	* tests/scaffold.c (_OSC _OSC_P): Added new ostream compare macros
	conditional on #ifdef __cpluspluc.
	* tests/test-ostream.cpp: Added scaffold.c based tests.

2011-12-12  Ryan S. Arnold  <rsa@linux.vnet.ibm.com>

	* dfp/decimal/decimal(operator<< decimal128): Removed now spurious
	call to ostream_d128() (which has been removed from libdfp) in the
	decimal128 operator<< overload.
	Updated comments clarifying use of 'a/A' over 'g/G' for the default.

2011-12-10  Ryan S. Arnold  <rsa@linux.vnet.ibm.com>

	* dfp/decimal/decimal: Added back in erroneously removed #include
	<stdio.h>.

2011-12-10  Ryan S. Arnold  <rsa@linux.vnet.ibm.com>

	* dfp/decimal/decimal: Removed ostreamd32, ostreamd64, and
	ostreamd128 prototypes.

2011-12-10  Ryan S. Arnold  <rsa@linux.vnet.ibm.com>

	* decode.h: Added __BEGIN_DECLS and __END_DECLS around
	decoded[32|64|128] prototypes in order to allow them to be used in C++
	compatibility testcases without warnings.
	* scaffold.c: Removed extra #include "decode.h". 
	* test-strtod.c: Likewise.

2011-12-10  Ryan S. Arnold  <rsa@linux.vnet.ibm.com>

	* Makefile.in: Copied contents of $(system_header_dirs) into
	$(header_dirs) in order to have -I added automatically to the compiler
	invocation.  This makes sure that dfp/decimal/decimal always comes
	before the system include/decimal/decimal header.

2011-12-10  Ryan S. Arnold  <rsa@linux.vnet.ibm.com>

	* README.user: Add instructions for using <decimal/decimal> to pick up
	operator<< and operator>> overloads for decimal[32|64|128] types.
	* README.developer: Removed necessity of including -isystem in
	CPPFLAGS in order to pick up decimal headers.
	* dfp/decimal: Created dfp/decimal/ header include directory.
	* dfp/decimal.tmp: Moved decimal.tmp to decimal/decimal.
	* dfp/decimal/decimal: Moved decimal.tmp to decimal/decimal.

2011-12-10  Ryan S. Arnold  <rsa@linux.vnet.ibm.com>

	* Makefile.in: Install dfp/decimal/ directory.  Add
	dfp/decimal/decimal path.
	* tests/test-ostream.cpp: Change <decimal> to <decimal/decimal>
	* TODO: Added directive to test decimal/ directory installs.
	* dfp/decimal: Moved file "decimal" to "decimal.tmp".
	* dfp/decimal.tmp: Moved file "decimal" to "decimal.tmp".

2011-12-08  Ryan S. Arnold  <rsa@linux.vnet.ibm.com>

	* configure: Regenerated.
	* Makefile.in:
	(@CXX@, @LLD@, @OBDJUMP@, @GDB@, @CXXFLAGS@, and @CPPFLAGS@): New
	imports.
	(header_dirs): Move dfp/ to $(system_header_dirs).
	(CXX_DEFINES CXX_WARNS): New variables.
	(.c.o): Add $(CPPFLAGS). Add -I$(system_header_dirs).
	(.c.os): Likewise
	(.S.o): Add -I$(system_headers).
	(.cpp.os) Likewise.
	(GLIBC_LIBS): Remove unnecessary libpthread.so linkage.
	(libdfp_cxx_tests): New variable.
	(libdfp_tests): Renamed to (libdfp_c_tests) and replaced with
	$(libdfp_c_tests) $(libdp_cxx_tests).
	Added new rule for $(libdfp_cxx_tests).os dependencies on float.h.
	Added new rule for $(libdfp_tests) to rely on tests/scaffold.c.
	Added new rule to link $(libdfp_cxx_tests) to their .os files.
	(.SUFFIXES): Added .cpp.
	* ieee754r/lgammad32.c: Changed <dfp/math.h> to <math.h>.
	* tests/test-printf.c: Discovered a bug in %.Ha.  If there is a '.'
	with no precision specifier it prints a bogus value.  This adds this
	failure to the test suite.
	* tests/test-ostream.cpp: New test to test operator<< header file
	additions in dfp/decimal.
	* configure.ac: Added AC_PATH_PROG for OBJDUMP, LDD, GDB.  Added
	AC_SUBST for CXXFLAGS, CPPFLAGS.
	* README.user: Added instructions for printf "a,A" Conversion
	Specifier usage.
	* README.developer: Added instructions for specifying PATH to pick up
	toolchain default programs.  Added instructions for LDD, GDB, OBJDUMP,
	CXX, CXXFLAGS, and CPPLAGS.
	* Versions.def
	* Makefile.gdb: Use configure exported 'objdump' via $(OBJDUMP). Use
	configure exported 'ldd' via $(LDD).  Use configure exported 'gdb' via
	$(GDB).
	* dfp/stdlib.h: Comment update.
	* dfp/float.h: New file adds _Decimal[32|64|128] types #ifdef
	__cplusplus and if they aren't added by the compiler.  At the time of
	this writing the compiler hasn't added them to float.h yet.
	* dfp/decimal: New file adds operator<< for decimal[32|64|128] C++
	types.  This use C++ template metaprogramming to create functions that
	call printf.
	* printf_dfp.c: Comment change for a/A spec char.
	* TODO: New item.

2011-12-01  Ryan S. Arnold  <rsa@linux.vnet.ibm.com>

	* Makefile.in (libdfp_tests): Add test-expd, testing
	expd[64|128](-1.0) which was previously failing.
	(libdfp_tests.so): New dummy rule to add
	$(top_srcdir)/tests/scaffold.c as a dependency so that scaffold.c
	changes result in rebuilding the libdfp_test .so files on make check.
	* tests/test-expd.c: New file testing expd[32|64|128].
	* tests/scaffold.c (_AVC _AVC_P): New macros which do a value compare
	but allow a +/- variation.
	* README.user: Added instructions for C++ types compatibility with
	ISO-C DFP types.
	* sysdeps/powerpc/dfpu/expd64.c: Existing code only accounts for
	positive 'n' in e^n.  This fix allows for e^-n, which is just 1/(e^n).

2011-11-16  Ryan S. Arnold  <rsa@linux.vnet.ibm.com>

	* README.user: Updated with instructions for using #include <dfp/  >.
	* sysdeps/soft-dfp/dpd/Versions: Moved __dpd_extend* and __dpd_trunc*
	symbol definitions from here to...
	* sysdeps/dpd/Versions: here, since these are needed for all versions
	of libdfp, not just the soft-dfp version.

2011-11-16  Ryan S. Arnold  <rsa@linux.vnet.ibm.com>

	* Makefile.in: Replace erroneous usage of $? with $^.  Fix
	libdfp_tests based rules to correct prerequisite usage so that a
	complete rebuild isn't required when only a few of the test case
	dependencies change.
	* Makefile.gdb: Correct prerequisite usage to not require a complete
	rebuild when only a few of the test case dependencies change.

2011-11-15  Ryan S. Arnold  <rsa@linux.vnet.ibm.com>

	* dfp/stdlib.h: Added #include <features.h> to correct include order
	problem.
	* dfp/wchar.h: Likewise.
	* tests/test-stdlib.c: New test to verify <features.h> inclusion.
	* tests/test-wchar.c: New test to verify <features.h> inclusion.
	* Makefile.in (libdfp_tests): Added test-stdlib and test-wchar.

2011-10-27  Ryan S. Arnold  <rsa@linux.vnet.ibm.com>

	* configure: Regenerated.
	* configure.ac: Incremented the version number to 1.0.8.
	* Versions.def: Incremented the version number to 1.0.8.
	* tests/test-bfp-conversions.c: Added tests for extendsddf extendsdtf
	extenddfdd extendddtf extenddftd and extendtftd.

2011-10-27  Ryan S. Arnold  <rsa@linux.vnet.ibm.com>

	* base-math/Makefile: Moved 'classify' from sysdeps/soft-dfp/Makefile.
	* base-math/classify.c: Moved from sysdeps/soft-dfp/ because it's
	required for the power6 build as well.
	* base-math/extendsftd.c: Likewise.
	* base-math/extendsdtf.c: Likewise.
	* base-math/extenddfdd.c: Likewise.
	* base-math/trunctdsf.c: Likewise.
	* base-math/trunctfsd.c: Likewise.
	* base-math/extendddtf.c: Likewise.
	* base-math/extenddftd.c: Likewise.
	* base-math/extendsfsd.c: Likewise.
	* base-math/extendtftd.c: Likewise.
	* base-math/truncdddf.c: Likewise.
	* base-math/trunctfdd.c: Likewise.
	* base-math/trunctddf.c: Likewise.
	* base-math/truncsdsf.c: Likewise.
	* base-math/trunctdtf.c: Likewise.
	* base-math/extendsddf.c: Likewise.
	* base-math/extendsfdd.c: Likewise.
	* base-math/truncddsf.c: Likewise.
	* base-math/truncdfsd.c: Likewise.
	* tests/scaffold.c (_VC_P): Updated spacing in "Expected" and "Result"
	output.
	* tests/test-bfp-conversions.c: Added float -> _Decimal128 tests.
	* sysdeps/soft-dfp/Makefile: Moved 'classify' to base-math/Makefile.
	* sysdeps/soft-dfp/classify.c: Moved to base-math/ because it's
	required for the power6 build as well.
	* sysdeps/soft-dfp/extendsftd.c: Likewise.
	* sysdeps/soft-dfp/extendsdtf.c: Likewise.
	* sysdeps/soft-dfp/extenddfdd.c: Likewise.
	* sysdeps/soft-dfp/trunctfsd.c: Likewise.
	* sysdeps/soft-dfp/trunctdsf.c: Likewise.
	* sysdeps/soft-dfp/extenddftd.c: Likewise.
	* sysdeps/soft-dfp/extendddtf.c: Likewise.
	* sysdeps/soft-dfp/extendsfsd.c: Likewise.
	* sysdeps/soft-dfp/extendtftd.c: Likewise.
	* sysdeps/soft-dfp/truncdddf.c: Likewise.
	* sysdeps/soft-dfp/trunctfdd.c: Likewise.
	* sysdeps/soft-dfp/trunctddf.c: Likewise.
	* sysdeps/soft-dfp/truncsdsf.c: Likewise.
	* sysdeps/soft-dfp/trunctdtf.c: Likewise.
	* sysdeps/soft-dfp/extendsfdd.c: Likewise.
	* sysdeps/soft-dfp/extendsddf.c: Likewise.
	* sysdeps/soft-dfp/truncddsf.c: Likewise.
	* sysdeps/soft-dfp/truncdfsd.c: Likewise.

2011-10-27  Ryan S. Arnold  <rsa@linux.vnet.ibm.com>

	* Makefile.in (libdfp_tests): Added test-bfp-conversions.
	* base-math/Makefile (libdfp_files): Moved extendsfsd extendsddf
	extendsdtf extendsfdd extenddfdd extendddtf extendsftd extenddftd
	extendtftd truncsdsf truncdfsd trunctfsd truncddsf truncdddf
	trunctfdd trunctdsf trunctddf trunctdtf from sysdeps/soft-dfp/Makefile
	since they're required in all builds.
	* tests/test-bfp-conversions.c: New file to test bfp -> dfp and dfp ->
	bfp conversions.
	* include/convert.h: Moved from sysdeps/soft-dfp/ in preparation for
	moving extend and trunc bfp->dfp and dfp->bfp conversion functions.
	* sysdeps/soft-dfp/Makefile (libdfp_files): Removed extendsfsd
	extendsddf extendsdtf extendsfdd extenddfdd extendddtf extendsftd
	extenddftd extendtftd truncsdsf truncdfsd trunctfsd truncddsf
	truncdddf trunctfdd trunctdsf trunctddf trunctdtf and moved to
	base-math/Makefile since they're required in all builds.
	* sysdeps/soft-dfp/extendsfsd.c: Replaced magic number '24' with
	__FLT_MANT_DIG__.
	* sysdeps/soft-dfp/convert.h: Moved to include/convert.h.
	* sysdeps/soft-dfp/truncdfsd.c: Replaced magic number '53' with
	__DBL_MANT_DIG__.

2011-04-28  Ryan S. Arnold  <rsa@us.ibm.com>

	* tests/gdb_start_address.py: New file which provides the
	start_address() python convenience function to GDB.
	* Makefile.gdb (*.gdb): Break on _dl_start_user for powerpc64 and
	_dl_main_dispatch on powerpc32.  Call new python convenience function
	start_address() to get the start address of libc and libdfp for the
	scripts.

2011-03-30  Ryan S. Arnold  <rsa@us.ibm.com>

	* sysdeps/powerpc/powerpc32/power6/fpu/Makefile (ASFLAGS): Remove
	HAVE_ASM_PPC_REL16 as it is no longer needed since we no longer
	support building the power[6|7] optimized libdfp with -mbss-plt.
	* sysdeps/powerpc/powerpc32/power6/fpu/floatunsdisd.S: Remove
	HAVE_ASM_PPC_REL16 guard and remove the bss-plt form of GOT access.
	We no longer support building the power[6|7] optimized libdfp with
	-mbss-plt.
	* sysdeps/powerpc/powerpc32/power6/fpu/fixunssddi.S: Likewise.
	* sysdeps/powerpc/powerpc32/power6/fpu/fixunsdddi.S: Likewise.
	* sysdeps/powerpc/powerpc32/power6/fpu/fixunstddi.S: Likewise.
	* sysdeps/powerpc/powerpc32/power6/fpu/floatunsdidd.S: Likewise.
	* sysdeps/powerpc/powerpc32/power6/fpu/floatunsditd.S: Likewise.

2011-03-30  Ryan S. Arnold  <rsa@us.ibm.com>

	* configure: Regenerated.

2011-03-30  Andreas Schwab  <schwab@redhat.com>

	* Makefile.in: Added $(CFLAGS) to .S.o: rules.
	* configure.ac: Added -DSHARED to picflag in order to enforce PIC when
	compiling hand rolled asm functions.
	* sysdeps/powerpc/powerpc32/power6/fpu/Makefile: Added
	-DHAVE_ASM_PPC_REL16 to ASFLAGS in order to enforce secure-plt
	style GOT access.

2011-03-30  Ryan S. Arnold  <rsa@us.ibm.com>

	* sysdeps/s390/dfpu/fe_decround.c (__init_printf_dfp_getround): Added
	function definition for callback and added callback pointer.  The
	printf_dfp () function was graciously skipping over the rounding mode
	modifiers due to this missing definition.
	* README.developer: Updated compatibility matrix to put x86 and x86_64
	under TODO.  Changed all instances of at05 to at4.0.

2011-03-30  Andreas Schwab  <schwab@redhat.com>

	* fe_decround.c (__init_printf_dfp_getround): Remove unnecessary
	prototype and declare constructor 'static.  Remove unnecessary
	hidden_def(__init_printf_dfp_getround).
	* sysdeps/powerpc/dfpu/fe_decround.c (__init_printf_dfp_getround):
	Remove unnecessary prototype and declare constructor 'static.  Remove
	unnecessary hidden_def(__init_printf_dfp_getround).
	* sysdeps/s390/dfpu/fe_decround.c: Added <dfpfenv_private.h>
	* printf_dfp.c: Add hidden_def (__register_printf_dfp).
	* include/libdfp-symbols.h (hidden_def): Fix macro definition.

2011-03-15  Ryan S. Arnold  <rsa@us.ibm.com>

	* printf_dfp.c (__printf_dfp): Finished cleaning up 'decimal'.
	* sysdeps/powerpc/sysdep.h: Updated copyright year.

2011-03-15  Ryan S. Arnold  <rsa@us.ibm.com>

	* README.maintainer: Updated.
	* sysdeps/powerpc/powerpc32/power6/fpu/fixunstdsi.S (END): Fix
	erroneous __dpd_fixunstssi to __dpd_fixunstdsi.
	* sysdeps/powerpc/powerpc32/sysdep.h (PROF): Removed PROF macros.
	(CALL_MCOUNT): Removed CALL_MCOUNT.
	(ENTRY): Removed CALL_MCOUNT and C_SYMBOL_NAME from macro body.
	Replaced C_LABEL with LABEL.
	(C_TEXT): Removed macro as unnecessary.
	* sysdeps/powerpc/sysdep.h (C_LABEL): Removed macro.
	* include/libdfp-symbols.h (LABEL): New macro which replaces C_LABEL
	by removing preceding underscore.
	* printf_dfp.c (__dfp_ais): Return -1 if info->user doesn't match any of
	the DFP mod_[H|D|DD] identifiers.
	(__printf_dfp): Started cleaning up 'decimal' per Jakub Jelinek's
	suggestion.  Fixed bug found by Jakub Jelinek where random garbage is
	printed if the modifier is not H/D/DD.  The default was dropping into
	the _Decimal32 case when it should have been returning -2.

2010-02-08  Ryan S. Arnold  <rsa@us.ibm.com>

	* README.maintainer: Added todo for "Commit Access"

2011-02-08  Ryan S. Arnold  <rsa@us.ibm.com>

	* README.maintainer: New file.
	* README.developer: Added several TODO items.
	* TODO: Added an item.
	* CONTRIBUTORS: Moved DCO from here to...
	* CONTRIBUTING: here.

2011-1-21  Ryan S. Arnold  <rsa@us.ibm.com>

	* configure: Regenerated.
	* configure.ac: Incremented the version number to 1.0.7.
	* Versions.def: Incremented the version number to 1.0.7.

2011-1-21  Andreas Krebbel  <Andreas.Krebbel@de.ibm.com>

	* sysdeps/s390/dfpu/numdigits.h (setexp): Bias the exponent and return
	'1' for z zero mantissa, which is what is done for soft-dfp.
	* sysdeps/s390/dfpu/fe_decround.c (__fe_dec_setround): Enable extended
	rounding modes (5,6 and 7) which are not covered by the standard.

2011-1-18  Ryan S. Arnold  <rsa@us.ibm.com>

	* configure: Regenerated.
	* tests/test-isfinite.c: Changed expectation on isfinite() for
	negative numbers on Power5 to '1'.  Power6 (hardware isfinite) returns
	'-1' on isfinite.  The spec simply says that non-zero means finite.
	* tests/test-logd.c: Removed half completed 'quantize compare'
	functionality which was throwing a false error.
	* tests/test-decode.c: Removed dangling printf that wasn't useful.
	* tests/test-printf.c: Added a _Decimal128 test for printing (1.0DL /
	1.000000e-123DL) which has a sufficiently negative exponent that it
	forced the 'index' (rounding digit) position to be negative and caused
	a segv when __printf_dfp() tried to erroneously round the result on
	s390.  We got lucky up until now on PowerPC due to the kernel
	reserving space on the top of the stack.
	* configure.ac: Incremented the version number to 1.0.6.
	* Versions.def: Incremented the version number to 1.0.6.

2011-1-18  Andreas Krebbel  <Andreas.Krebbel@de.ibm.com>

	* printf_dfp.c (__printf_dfp): Fixed segv where, if the exponent is
	sufficiently negative it pushes 'index' (the digit used to round
	values to the left) into a negative number.  In that case we simply
	don't need to round at all.

2011-1-18  Ryan S. Arnold  <rsa@us.ibm.com>

	* tests/test-strtod.c: Adjusted assumptions of tests from truncation
	on too long of an input to rounding to nearest.

2011-1-18  Andreas Krebbel  <Andreas.Krebbel@de.ibm.com>

	* strtod32.c (FUNCTION_L_INTERNAL): Check an extra digit on the input
	to see if we need to round rather than truncate.

2011-1-17  Ryan S. Arnold  <rsa@us.ibm.com>

	* configure: Regenerated.
	* tests/test-strtod.c: Removed unnecessary test cases.
	* configure.ac: Incremented the version number to 1.0.5.
	* Versions.def: Incremented the version number to 1.0.5.

2011-01-17  Ryan S. Arnold  <rsa@us.ibm.com>

	* Makefile.in (libdfp_tests): Added test-log10d.
	* tests/test-decode.c: Added decode of log10d128(0.0000000011DL) to
	verify that it prints correctly in declets.
	* tests/test-logd.c (main): Added pbuf[CHAR_MAX] so that tests work
	properly.
	* tests/test-log10d.c: New test-case which verifies that printf now
	works properly for the result of log10d128(0.0000000011DL).
	* sysdeps/dpd/dpd-private.c: Fixed dpd_to_char[0x3f4] from "974" to
	"774" since the previous was a typo which was making values print
	incorrectly.

2011-01-17  Ryan S. Arnold  <rsa@us.ibm.com>

	* configure: Regenerated.
	* configure.ac: Removed addition of -fPIC to CFLAGS and instead export
	it to Makefile.in who is now responsible for adding it to CFLAGS.  Set
	(picflags): Default to -fpic since the GOT for libdfp should be small
	enough that -fPIC isn't needed.
	* Makefile.in: (BACKEND_CFLAGS): New variable which passes -mcpu=foo
	and -fpic to the backend sub make invocation in -DEFS to get around
	the fact that libdecnumber/Makefile.in won't allow overridden CFLAGS.
	* sysdeps/dpd/dpd-private.c: Fixed 'used when uninitialized' warning
	by switching "else if" case to "else" for Decimal128.

2010-12-10  Luis Machado  <luisgpm@br.ibm.com>

	* strtod32.c: Fix precedence of arithmetic operation.
	* tests/test-strtod.c: Add new testcase and fix wrong tests.

2010-12-03  Ryan S. Arnold  <rsa@us.ibm.com>

	* configure: Regenerated.
	* configure.ac: Incremented the version number to 1.0.4
	* README.user: Marked empty sections with (TODO).
	* Versions.def: Incremented the version number to 1.0.4

2010-11-29  Ryan S. Arnold  <rsa@us.ibm.com>

	* README.user: Added clarification of how to include dfp/stdlib.h,
	dfp/fenv.h and dfp/wchar.h.

2010-11-29  Ryan S. Arnold  <rsa@us.ibm.com>

	* README.user: Added clarification of how to include dfp/math.h.

2010-11-29  Ryan S. Arnold  <rsa@us.ibm.com>

	* dfp/math.h: Move #include_next <math.h> so that if the compiler
	invocation has -I/<path>/include/dfp/ but doesn't define
	__STDC_WANT_DEC_FP__ that they still get the system math.h.

2010-11-19  Ryan S. Arnold  <rsa@us.ibm.com>

	* CONTRIBUTORS: Added Luis Machado.  Added DCO requirements.

2010-11-09  Luis Machado  <luisgpm@br.ibm.com>

	* strtod32.c (FUNCTION_L_INTERNAL): Fix comparison operator.

2010-11-08  Luis Machado  <luisgpm@br.ibm.com>

	* sysdeps/s390/dfpu/numdigits.h: Remove include guards.
	* sysdeps/powerpc/dfpu/numdigits.h: Likewise.
	* sysdeps/soft-dfp/dpd/numdigits.h: Likewise.

2010-10-07  Ryan S. Arnold  <rsa@us.ibm.com>

	* tests/test-printf.c (printf_d128s): Added 0.9999999999DL which
	reported 0.100000 rather than 1.000000 and was fixed by Andreas'
	patch from 2010-10-04.

2010-10-04  Andreas Schwab  <schwab@redhat.com>

	* printf_dfp.c (__printf_dfp): Fix up nd when rounding overflows
	beyond first digit.

2010-08-25  Luis Machado  <luisgpm@br.ibm.com>

	* sysdeps/soft-dfp/floatsisd.c: Don't generate additional decimal
	digit.

2010-08-24  Ryan S. Arnold  <rsa@us.ibm.com>

	* README.developer: Documentation update.
	* TODO: Mark some items as [DONE].

2010-08-23  Carlos Eduardo Seo  <cseo@linux.vnet.ibm.com>

	* init_dfp.c: Changed #include <dfp/dfp.h> to #include <dfp.h>.

2010-08-12  Luis Machado  <luisgpm@us.ibm.com>

	* tests/test-amort.c: Added license and copyright.
	* tests/test-printf.c: Updated copyright year.
	* tests/test-strtod.c: Added license and copyright.  Corrected
	incorrect expected values.
	* strtod32.c: Fixed several conversion bugs.

2010-08-12  Ryan S. Arnold  <rsa@us.ibm.com>

	* Makefile.in: Removed test-left_justify from execution since it is a
	known failure case for non-power6 systems.  No worries since
	left_justify isn't used right now.
	* tests/test-amort.c: Removed spurious #include <dfp.h>.
	* tests/test-get_digits.c: Likewise.
	* tests/test-decode.c: Likewise.
	* tests/test-quantize.c: Likewise.
	* tests/test-printf.c: Likewise.
	* tests/test-fpclassify.c: Likewise.
	* tests/test-numdigits.c: Likewise.
	* tests/test-left_justify.c: Likewise.
	* tests/test-isinf.c: Likewise.
	* tests/test-isnan.c: Likewise.
	* tests/test-isfinite.c: Likewise.
	* tests/test-strtod.c: Likewise.  Also changed one value compare test
	to a decode test since the visual representation was 0.0.
	* README.user: Added further user notes.
	* dfp/dfp.h: Moved this to ...
	* include/dfp.h: here since the user no longer has to call the
	printf_dfp registration hooks, and thus doens't need the prototype.

2010-08-11  Ryan S. Arnold  <rsa@us.ibm.com>

	 configure: Regenerated.
	 configure.ac: Added AC_SUBST(mzarch) back.  We shouldn't be editing
	 CFLAGS.
	 Makefile.in: Pass $(mzarch) along with CFLAGS if it is defined.

2010-08-06  Ryan S. Arnold  <rsa@us.ibm.com>

	* configure: Regenerated.
	* Makefile.in: Added special sed script which changes
	libdecnumber/Makefile:CFLAGS = foo into CFLAGS ?= foo.  This allows
	libdfp/Makefile's sub make invocation of libdecnumber/Makefile to
	accept the updated CFLAGS.  This was necessary to allow configure to
	update CFLAGS with -mzarch for s390 z9-ec and z10.  GCC should fix
	this in their version of libdecnumber.
	* configure.ac: -mzarch added to CFLAGS when s390 system is z9-ec or
	z10.
	* README.developer: Added indication that configure.ac sets -mzarch in
	CFLAGS when appropriate.

2010-08-06  Ryan S. Arnold  <rsa@us.ibm.com>

	* Makefile.gdb (libdfp_tests.gdb): Add
	LD_LIBRARY_PATH=./:$LD_LIBRARY_PATH to ldd invocations to make sure
	it reports ./libdfp.so.1 as a dependency and not the system or
	toolchain libdfp.so.1.

2010-08-05  Ryan S. Arnold  <rsa@us.ibm.com>

	* ieee754r/Versions: Added __fabsd* and __fpclassifyd* under the
	correct libdfp version number 1.0.3.

2010-08-05  Ryan S. Arnold  <rsa@us.ibm.com>

	* dfp/math.h: Restructure to cleanup presentation.

2010-08-04  Ryan S. Arnold  <rsa@us.ibmcom>

	* ieee754r/Versions: Moved some of the __is* functions under LIBDFP_1.0.2
	and LIBDFP_1.0.3.  Removed unnecessary __is* functions from export
	that don't have polymorphic versions in math.h
	* dfp/math.h: Removed accidental undef of isunordered.  This was
	never implemented as a polymorphic function because it doesn't need to
	be (per the spec).  Removed redundant polymoprhic isnan().
	* Versions.def: Added Versions LIBDFP_1.0.2 and LIBDFP_1.0.3 for Libdfp.

2010-08-04  Ryan S. Arnold  <rsa@us.ibm.com>

	* configure: Regenerated.
	* configure.ac: Apparently AC_CANONICAL_SYSTEM is only for compilers.
	I removed it, and support for --target.  Now you must use --build
	only.
	* README.developer: Removed directions for using --target.

2010-07-30  Ryan S. Arnold  <rsa@us.ibm.com>

	* sysdeps/powerpc/dfpu/fe_decround.c (stdio.h): Removed unnecessary
	include.

2010-07-30  Ryan S. Arnold  <rsa@us.ibm.com>

	* sysdeps/powerpc/dfpu/fe_decround.c (__fe_dec_getround): The
	structure which defined the DRN was to small and the compiler started
	generating code that wasn't properly extracting the DRN field from the
	structure holding the FPSCR value.  This is fixed.
	* tests/test-round.c: Testcase to prove fe_dec_getround() and
	fe_dec_setround().
	* Makefile.in (libdfp_tests): Added test-round.

2010-07-28  Ryan S. Arnold  <rsa@us.ibm.com>

	* configure: Regenerated.
	* config.log: Removed as unnecessary.
	* configure.ac: --target now works in lieu of --build.  --host is no
	longer necessary.
	* README.developer: Removed directive to use --host and replaced with a
	diective to use --target.

2010-07-26  Ryan S. Arnold  <rsa@us.ibm.com>

	* configure: Regenerated file.
	* Makefile.in: Removed last comments dealing with -mzarch.
	* configure.ac: Removed last fragments dealing with -mzarch.

2010-07-26  Ryan S. Arnold  <rsa@us.ibm.com>

	* ieee754r/isinfd32.c: Removed unnecessary static char buffer used for
	testing.

2010-07-26  Ryan S. Arnold  <rsa@us.ibm.com>

	* ieee754r/isinfd32.c: Removed test-code that shouldn't have been
	checked in.

2010-07-26  Ryan S. Arnold  <rsa@us.ibm.com>

	* ieee754r/isinfd32.c (isinf): Changed Infinity check such that
	DEC_NAN doesn't pass as inf.  There was an incorrect mask check which
	was true for DEC_NAN as well as Inf.
	* tests/test-isfinite.c: Added Conditional expectations for s390 for
	isfinite return values from negative number inputs.

2010-07-23  Ryan S. Arnold  <rsa@us.ibm.com>

	* tests/test-logd.c: Removed unnecessary comments.
	* tests/test-fpclassify.c: Removed unnecessary comments.
	* configure.ac: Removed unnecessary comments.
	* printf_dfp.c: Removed unnecessary comments.

2010-07-23  Ryan S. Arnold  <rsa@us.ibm.com>

	* Makefile.in: Removed commented out code.
	* tests/test-logd.c: Corrected expected values for a _Decimal64 NAN
	declet series.
	* tests/test-fpclassify.c: Added cases for + and -
	__DEC[32|64|128]_SUBNORMAL_MIN__.
	* tests/scaffold.c: Modified spacing in macro output for 'Success'.
	* tests/test-isfinite.c: Corrected expected values for negative
	numbers to return -1.  Corrected expected value for DEC_NAN to '0'.
	* tests/test-strtod.c: Cleaned up.  Still failing.
	* sysdeps/powerpc/dfpu/fpclassifyd32.c (fpclassifyd32): Since
	_Decimal32 is promoted to _Decimal64 and __DEC32_SUBNORMAL_MIN__ falls
	within the bounds of _Decimal64 a special case to range check for
	_Decimal32 as required.
	* sysdeps/powerpc/dfpu/powd64.c: Whitespace correction.
	* strtod32.c: Started to cleanup the code.


2010-07-21  Ryan S. Arnold <rsa@us.ibm.com>

	* Makefile.in: Added test-numdigits, test-get_digits, and test-left_justify.
	* base-math/Makefile: Fixed missing truncd* exports which was exposed
	by GCC 4.4.
	* base-math/lttd2.c (lttd3): Renamed lttd3 to lttd2.  Typo.
	* tests/test-get_digits.c: Added test-cases to show previously failing
	numdigits for soft-dfp when coefficient was zero.  It was returning
	'0' intead of '1', which is what hardware DFP returns.
	* tests/test-printf.c: Added test-cases to show failing tests.
	* tests/test-fpclassify.c: (printf_d32s): Changed DENORMAL to
	SUBNORMAL in constant usage.  GCC changed usage.
	* tests/test-numdigits.c: New test.
	* tests/scaffold.c: Updated output formatting of macros to make output
	clearer (columns and test numbering).
	* tests/test-left_justify.c: New test.
	* tests/test-strtod.c: Added test-cases to show failing tests.
	* sysdeps/powerpc/dfpu/numdigits.h (_NUMDIGITS_H): Removed guard to
	allow multiple #includes with different preconditions.
	(numdigits): New implementation which avoids clobbers and avoids
	modifying a parameter.
	(left_justify): New implementation which avoids clobbers and avoids
	modifyinig a parameter.
	(getexp): New implementation which avoids modifying a parameter.
	* sysdeps/powerpc/dfpu/fe_decround.c (__fe_dec_setround): Fixed
	errorneous usage of mtfsfi instruction.  Previous usage resulted in
	the set rounding mode not being permanent.
	* sysdeps/soft-dfp/dpd/numdigits.h (numdigits): Return '1' if
	coefficient is zero, which is what hardware DFP does.
	(__dfp_declet_to_dpd): Moved to ...
	* sysdeps/dpd/dpd-private.h: ... this file.
	* sysdeps/dpd/dpd-private.c: Formatting.
	* printf_dfp.c (printf_dfp): Major fixes to correct a variety of
	printing errors.  It should now fully support %f, %e, %g, and %a in
	the myriad of bizarre combinations.

2010-07-06  Ryan S. Arnold  <rsa@us.ibm.com>

	* Makefile.in: Added test-strtod testcase.
	* tests/test-logd.c: Cleaned up some comments.
	* tests/scaffold.c: Cleaned up _QC_P macro.  It is incomplete at this
	point.
	* tests/test-strtod.c: New testcase.
	* sysdeps/powerpc/dfpu/isfinited128.c: Removed spurious <dfpmacro.h>.
	* sysdeps/powerpc/dfpu/isfinited32.c: Likewise.
	* sysdeps/powerpc/dfpu/isfinited64.c: Likewise.
	* sysdeps/powerpc/dfpu/is_template.h: Added <dfpmacro.h> and removed
	redundant macro definitions.
	* strtod32.c: Fixed bug when calling newlocale(LC_ALL_MASK,NULL,NULL);
	Changed it to newlocale(LC_ALL_MASK, setlocale (LC_ALL, NULL),NULL);

2010-06-15  Ryan S. Arnold  <rsa@us.ibm.com>

	* tests/test-logd.c: Added more expressive output on failure.
	* sysdeps/powerpc/dfpu/isfinited128.c: Added #include <dfpmacro.h>.
	* sysdeps/powerpc/dfpu/isfinited32.c: Likewise.
	* sysdeps/powerpc/dfpu/isfinited64.c: Likewise.

2010-06-15  Ryan S. Arnold  <rsa@us.ibm.com>

	* configure: Regenerated.
	* ieee754r/Versions: Re-added __isfinited* for backward compatability.
	* configure.ac: Increment library version to 1.0.3 due to interface changes.
	* README.user: Whitespace.
	* ieee754r/isfinited32.c: Use 'isfinite' instead of 'finite'.
	* sysdeps/powerpc/dfpu/isfinited128.c: Use 'isfinite' instead of
	* 'finite'.
	* sysdeps/powerpc/dfpu/isfinited32.c: Use 'isfinite' instead of
	* 'finite'.
	* sysdeps/powerpc/dfpu/isfinited64.c: Use 'isfinite' instead of
	* 'finite'.
	* dfp/math.h: Whitespace.

2010-06-15  Ryan S. Arnold  <rsa@us.ibm.com>

	* ieee754r/isfinited128.c: Change finite to isfinite.
	* ieee754r/isfinited32.c: Likewise.
	* ieee754r/isfinited64.c: Likewise.

2010-06-15  Ryan S. Arnold  <rsa@us.ibm.com>

	* Makefile.in: Added new test cases.  Changed finited to isfinited.
	* ieee754r/scalbnd32.c: Changed usage of finited to isfinited.
	* ieee754r/scalblnd32.c: Likewise.
	* ieee754r/cbrtd32.c: Likewise.
	* ieee754r/expd32.c: Likewise.
	* ieee754r/nextafterd32.c: Likewise.
	* ieee754r/exp2d32.c: Likewise.
	* ieee754r/Makefile: Likewise.
	* ieee754r/expm1d32.c: Likewise.
	* ieee754r/hypotd32.c: Likewise.
	* ieee754r/powd32.c: Likewise.
	* ieee754r/ldexpd32.c: Likewise.
	* ieee754r/fdimd32.c: Likewise.
	* ieee754r/nearbyintd32.c: Likewise.
	* ieee754r/coshd32.c: Likewise.
	* ieee754r/lgammad32.c: Likewise.
	* ieee754r/sinhd32.c: Likewise.
	* ieee754r/tgammad32.c: Likewise.
	* ieee754r/nexttowardd32.c: Likewise.
	* ieee754r/Versions: Likewise.
	* ieee754r/tand32.c: Likewise.
	* ieee754r/frexpd32.c: Likewise.
	* ieee754r/isfinited64.c: Renamed to this from...
	* ieee754r/finited64.c: ...this.
	* ieee754r/isfinited32.c: Renamed to this from...
	* ieee754r/finited32.c: ...this.
	* ieee754r/isfinited128.c: Renamed to this from...
	* ieee754r/finited128.c: ...this.
	* tests/test-logd.c: New test.
	* tests/test-quantize.c: New test.
	* tests/test-fpclassify.c: New test.
	* tests/scaffold.c: Started adding _QC and QC_P.
	* tests/test-isfinite.c: Renamed this...
	* tests/test-finite.c: ...from this.
	* sysdeps/powerpc/dfpu/logd64.c: Added hard-dfp optimizations.
	* sysdeps/powerpc/dfpu/isinfd128.c: Likewise.
	* sysdeps/powerpc/dfpu/isfinited128.c: Likewise.
	* sysdeps/powerpc/dfpu/expd64.c: Likewise.
	* sysdeps/powerpc/dfpu/rintd128.c: Likewise.
	* sysdeps/powerpc/dfpu/isfinited32.c: Likewise.
	* sysdeps/powerpc/dfpu/powd64.c: Likewise.
	* sysdeps/powerpc/dfpu/rintd32.c: Likewise.
	* sysdeps/powerpc/dfpu/finited32.c: Likewise.
	* sysdeps/powerpc/dfpu/logd32.c: Likewise.
	* sysdeps/powerpc/dfpu/isnormald64.c: Likewise.
	* sysdeps/powerpc/dfpu/fpclassifyd128.c: Likewise.
	* sysdeps/powerpc/dfpu/expd32.c: Likewise.
	* sysdeps/powerpc/dfpu/isnand128.c: Likewise.
	* sysdeps/powerpc/dfpu/is_template.h: Likewise.
	* sysdeps/powerpc/dfpu/powd32.c: Likewise.
	* sysdeps/powerpc/dfpu/ddlogtbls.h: Likewise.
	* sysdeps/powerpc/dfpu/isnormald128.c: Likewise.
	* sysdeps/powerpc/dfpu/isfinited64.c: Likewise.
	* sysdeps/powerpc/dfpu/rintd64.c: Likewise.
	* sysdeps/powerpc/dfpu/finited64.c: Likewise.
	* sysdeps/powerpc/dfpu/isnormald32.c: Likewise.
	* dfp/math.h: added islessgreaterd prototypes, etc.  Added isnormald
	prototypes.

2010-05-26  Ryan S. Arnold  <rsa@us.ibm.com>

	* configure: Updated version to 1.0.2.
	* Makefile.in: Added test cases.
	* ieee754r/Versions: Exported __isnand*, __isinfd*, etc.
	* tests/test-printf.c: Define _WANT_PC.
	* tests/test-decode.c: Define _WANT_DC.
	* tests/scaffold.c: Added _VC_P and _VC as well as _WANT_PC, _WANT_DC,
	and _WANT_VC.
	* tests/test-fpclassify.c: New classification function test.
	* tests/test-isnan.c: Likewise.
	* tests/test-isinf.c: Likewise.
	* tests/test-finite.c: Likewise.
	* tests/test-param.c: Likewise.
	* tests/test-quantize.c: Likewise.
	* sysdeps/powerpc/dfpu/quantized64.c: Hard-dfp implementation.
	* sysdeps/powerpc/dfpu/quantized128.c: Likewise.
	* sysdeps/powerpc/dfpu/fpclassifyd64.c: Likewise.
	* sysdeps/powerpc/dfpu/isnand32.c: Likewise.
	* sysdeps/powerpc/dfpu/isinfd32.c: Likewise.
	* sysdeps/powerpc/dfpu/isnand64.c: Likewise.
	* sysdeps/powerpc/dfpu/isinfd64.c: Likewise.
	* sysdeps/powerpc/dfpu/finited32.c: Likewise.
	* sysdeps/powerpc/dfpu/quantized32.c: Likewise.
	* sysdeps/powerpc/dfpu/finited64.c: Likewise.
	* sysdeps/powerpc/dfpu/fpclassifyd32.c: Likewise.

2010-05-20  Ryan S. Arnold  <rsa@us.ibm.com>

	* Makefile.in: Allow make check to work without --with-glibc-build.
	* tests/test-printf.c: Removed register_printf_dfp() invocation.
	* tests/test-amort.c: New file which is an amortiation benchmark.
	* tests/scaffold.c: Changed <decode.h> to "decode.h".
	* tests/decode.h (_DFP_DECODE_H): Added _DFP onto guard.
	* tests/debug-test.sh: Allow make check to work without
	--with-glibc-build by either debugging the app or the loader.
	* configure.ac: Incrememented the library version from 1.0.1 to 1.0.2
	due to the addition of the libdfp constructor which no longer requires
	register_printf_dfp().
	* README.user: More todos.
	* include/init_dfp.h (__libdfp_init): New file to add constructor
	prototype.
	* Makefile.gdb: Allow make check to work without --with-glibc-build.
	* init_dfp.c (__libdfp_init): New file.  Add a constructor to call
	register_printf_dfp().

2010-04-28  Ryan S. Arnold  <rsa@us.ibm.com>

	* configure: Regenerated.
	* Makefile.in: Remove appending of cc_msize to CFLAGS.  Remove -e from
	submake which builds libdecnumber.
	* configure.ac: Remove cc_msize and cc_mzarch and accompanying
	AC_SUBST.  The preferred method is to require the user to pass
	-m[31|32|64] in CFLAGS as an env variable when configure is invoked.
	* README.user: New file.
	* README.developer: Updated to direct user to pass -m[31|32|64] in
	CFLAGS and to always use --build and --host values that align with the
	-m values.

2010-02-03  Ryan S. Arnold  <rsa@us.ibm.com>

	* Makefile.in: Removed unneccesary rule -- backend:
	$(dfp_backend)/$(dfp_backend_lib).

2010-02-03  Ryan S. Arnold  <rsa@us.ibm.com>

	* Makefile.in: Fixed rule $(top_builddir)/$(dfp_backend_lib): to
	$(dfp_backend)/$(dfp_backend_lib) to correct problem with make -j*

2010-02-02  Ryan S. Arnold  <rsa@us.ibm.com>

	* Makefile.in: Replaced libdfp.so.1 generation using `ln -s' to using
	`ldconfig -l' in both $(top_builddir)/ and $(install_root)$(libdir)/.
	Added creation of linkname symlink libdfp.so.
	Strip trailing / from any install_root=<foo> paths.

2010-01-29  Ryan S. Arnold  <rsa@us.ibm.com>

	* Makefile.in: Fixed `ln -s' to not have the goofy '(cd..)', e.g. (cd
	$(libdir) ln -s <foo>) when making the .so.1 -> -1.0.1.so symlinks.

2010-01-29  Ryan S. Arnold  <rsa@us.ibm.com>

	* Makefile.in: Fixed libdir=@prefix@/lib to libdir=@libdir@ and
	includedir=@prefix@/include to includedir=@includedir@.  This will
	allow configure override with --libdir= and --includedir=
	respectively.  This was preventing installation into /<foo>/lib64.
	Fix header install so that dfp/README isn't installed with the header
	files.

2010-01-29  Ryan S. Arnold  <rsa@us.ibm.com>

	* Makefile.in: `install' doesn't handle symlinks so we've done another
	'ln -s' in the install stage to set $(SHARED_LIBRARY) ->
	./$(SHARED_VERSIONED_LIBRARY) in the $(install_root)/$(libdir)/
	directory.

2010-01-29  Ryan S. Arnold  <rsa@us.ibm.com>

	* Makefile.in: Fixed erroneous attempt to install libdfp.a even if
	--enable-static=no was configured.

2010-01-29  Ryan S. Arnold  <rsa@us.ibm.com>

	* Makefile.in: Fixed missing libdecnumber.a rule dependency by
	changing the backend rule to be `libdecnumber.a' rather than
	`libdecnumber'.  Fixed `ln -s' error when rebuilding without a make
	clean by adding `-f' to always force overwrite the previous versioned
	library symlink.
	* README: Renamed to README.developer
	* README.developer: New file.

2010-01-27  Ryan S. Arnold  <rsa@us.ibm.com>

	* configure: Regenerated.
	* configure.ac: Added additional help text when warning about the
	glibc headers lacking the printf-hooks support.
	* README: Clarified version number.
	* TODO: Updated.


2010-01-20  Ryan S. Arnold  <rsa@us.ibm.com>

	* configure: Regenerated.
	* configure.ac: Add check for glibc headers that support the
	printf-hooks.  Add runtime check for printf-hooks in libc specified by
	--with-glibc-build.
	* TODO: Updated.

2010-01-20  Ryan S. Arnold  <rsa@us.ibm.com>

	* configure: Regenerated.
	* configure.ac:  Updated libdfp to version 1.0.1 to indicate that
	power7 support has been added.

2010-01-20  Ryan S. Arnold  <rsa@us.ibm.com>

	* configure.ac: Added POWER 7 support.
	* README: Added notes on POWER 7 support.
	* sysdeps/powerpc/powerpc32/power7: New directory.
	* sysdeps/powerpc/powerpc32/power7/Implies: Imply Power6.
	* sysdeps/powerpc/powerpc32/power7/fpu: New directory.
	* sysdeps/powerpc/powerpc32/power7/fpu/Implies: Imply Power6.
	* sysdeps/powerpc/powerpc64/power7: New directory.
	* sysdeps/powerpc/powerpc64/power7/Implies: Imply Power6.
	* sysdeps/powerpc/powerpc64/power7/fpu: New directory.
	* sysdeps/powerpc/powerpc64/power7/fpu/Implies: Imply Power6.

2009-12-10  Ryan S. Arnold  <rsa@us.ibm.com>

	* configure: Regenerated.
	* configure.ac (AC_CACHE_CHECK): Re-added check for
	decimal-float-support in the compiler by checking whether the compiler
	can handle the _Decimal64 data type rather than checking whether the
	compiler -v output had a particular flag set.

2009-12-10  Ryan S. Arnold  <rsa@us.ibm.com>

	* configure: Regenerated.
	* configure.ac (AC_PROG_CC): Re-added AC_PROG_CC and removed custom
	$(CC).  Removed -m flags from CC and pushed this responsibility onto
	Makefile.in to put into CFLAGS.  These changes allow a user to prepend
	some custom flags onto CFLAGS at configure time.
	(dfp_opts): Changed to $(cc_mzarch).  No need to be obscure until we
	have to.
	* Makefile.in (cc_mzarch): New variable used on s390 only, otherwise
	empty.
	(default_cflags): Inherit defaults from configure.  Add
	-m$(cc_msize) and $(cc_mzarch).
	(default_asflags): Inherit defaults from configure.  Add
	-m$(cc_msize) and $(cc_mzarch).
	(+cflags): Simplified CFLAGS override mechanism.
	(+asflags): Simplified ASFLAGS override mechanism.
	($(top_builddir)/$(dfp_backend)): Manually pass overridden CFLAGS to
	backend 'make' since the -m flags aren't passed in the top level
	configure's CFLAGS.
	($(top_builddir)/$(SHARED_VERSION_LIBRARY)): Added $(CFLAGS) since
	it's no longer part of $(CC).
	($(libdfp_tests)): Added $(CFLAGS) since it's no longer part of $(CC).

2009-12-10  Ryan S. Arnold  <rsa@us.ibm.com>

	* configure: Regenerated.

2009-12-10  Andreas Krebbel  <Andreas.Krebbel@de.ibm.com>

	* configure.ac: Add -mzarch when building hw dfp on S/390.
	This is needed for 31 bit which would otherwise default to
	-mesa.

2009-12-09  Ryan S. Arnold  <rsa@us.ibm.com>

	* configure: Regenerated.
	* Makefile.in (.c.o, .c.os): Added -include $(top_builddir)/config.h to
	pick up _BACKEND_DPD or _BACKEND_BID.
	($(top_builddir)/$(STATIC_LIBRARY)): Add $(top_builddir) to
	dfp_backend path.
	* README: Added WARNING about making sure to link to a glibc that's
	the same bitness (32|64) and the same optimization as the libdfp
	that's being configure.  Added --with-glibc-build= examples.
	* Versions (libdfp): LIBDFP_1.0.0 tagged.
	* Versions.def (libdfp): LIBDFP_1.0.0 tagged.
	* ieee754r/Versions.def (libdfp): LIBDFP_1.0.0 tagged.
	* config.h.in: Regenerated.
	* configure.ac: (AC_INIT): Tagged version 1.0.0.
	(_DPD_BACKEND): AC_DEFINE_UNQUOTED; Set based on backend.
	(_BID_BACKEND): AC_DEFINE_UNQUOTED; Set based on backend.
	(--with-cpu): Removed submachine_opt="-mcpu=$withval".
	($machine): On s390 cc_msize=31 NOT 32.
	(AC_SUBST): CFLAGS and ASFLAGS.
	(AC_CACHE_CHECK): Removed check for compiler feature
	decimal-float-support.
	* ieee754r/frexpd32.c (INTERNAL_FUNCTION_NAME): Initialize 'result' to
	DEC_NAN because compiler can't see that it's set in a macro and
	generates warnings.
	* sysdeps/bid/Versions (libdfp): LIBDFP_1.0.0 tagged
	* sysdeps/dpd/Versions (libdfp): LIBDFP_1.0.0 tagged
	* sysdeps/dpd/dpd-private.c (__get_digits_d32, __get_digits_d64,
	__get_digits_d128): initialize exp = 0;
	* sysdeps/powerpc/dfpu/numdigits.h (numdigits): Conditionally define
	'f' based on _Decimal size to prevent the compiler from messing up the
	register order requirements.
	* sysdeps/soft-dfp/Versions (libdfp): LIBDFP_1.0.0 tagged
	* sysdeps/soft-dfp/bid/Versions (libdfp): LIBDFP_1.0.0 tagged
	* sysdeps/soft-dfp/dpd/Versions (libdfp): LIBDFP_1.0.0 tagged
	* tests/decode.h: New file providing non-exported decoded[32|64|128]
	prototypes used in tests and debugging.
	* tests/scaffold.c (_DC, _DC_P): Added macros for testing against
	decoded[32|64|128] output.
	* tests/test-param.c (main): Updated to use scaffold.c and test the
	values against the decoded[32|64|128] values that're expected.

2009-12-11  Andreas Krebbel  <Andreas.Krebbel@de.ibm.com>

	* ieee754r/powd32.c (INTERNAL_FUNCTION_NAME): Set __isnan ->
	FUNC_D(__isnan).  Not strictly necessary since __isnan is a
	polymorphic classification function, but this was we avoid the extra
	steps of detecting the type/size of the input parameter and call the
	appropriate __isnand[32|64|128] directly.

2009-12-04  Andreas Krebbel  <Andreas.Krebbel@de.ibm.com>

	* ieee754r/powd32.c: Add dfp prefix to __isnan invocation.

2009-12-04  Andreas Krebbel  <Andreas.Krebbel@de.ibm.com>

	* sysdeps/s390/dfpu/fenv_libdfp.h: Move file to ...
	* sysdeps/s390/fpu/fenv_libdfp.h: ... here.

2009-11-24  Andreas Krebbel  <Andreas.Krebbel@de.ibm.com>

	* configure.ac: Add a march vs mcpu gcc option check.

2009-11-20  Michael Matz  <matz@suse.de>

	* Makefile.in (prefix): Set based on @prefix@ to prevent missing
	--exec-prefix from setting @exec_prefix@ to the string '$(prefix)',
	i.e. not the context of $prefix.
	($(top_builddir)/$(SHARED_VERSION_LIBRARY)): Added -W,no-whole-archive
	to close -W,whole-archive to SHARED_VERSION_LIBRARY rule.  Removed
	-nodefaultlibs -nostdlib which prevented linking against libc and libm
	which libdfp relies upon.
	* tests/test-printf.c (printf_d128s): Added correct "expected"
	strings.
	* sysdeps/soft-dfp/dpd/numdigits.h (left_justify): Changed erroneous
	FUNC_D (getexp(x)) to FUNC_D (getexp) (x) to correct macro invocation.

2009-09-08  Andreas Krebbel  <Andreas.Krebbel@de.ibm.com>

	* README: Updated the S/390 availability section.

2009-09-08  Ryan S. Arnold  <rsa@us.ibm.com>

	* Makefile.in: Updated comment to reflect update from 0.0.1 to 0.0.9.
	* configure.ac (AC_INIT): Updated version from 0.0.1 to 0.0.9.
	* README: Added two TODO chapters and clarified the intro paragraphs.
	* Versions.def: Update package versions for symbols.
	* Versions: Update package versions for symbols.

2009-08-21  Ryan S. Arnold  <rsa@us.ibm.com>

	* Makefile.in: Added test-param to libdfp_tests.
	* tests/TODO: New file.
	* tests/README: N/A.
	* tests/test-param.c: New test to verify integrity of parameters that
	are spilled to the stack on being passed to a new function.

2009-08-21  Ryan S. Arnold  <rsa@us.ibm.com>

	* tests/test-printf.c: Added mechanism to easily add new printf test
	cases based upon GLIBC's stdio-common/tfformat.c testcase.

2009-08-13  Ryan S. Arnold  <rsa@us.ibm.com>

	* tests/scaffold.c: New file which holds _C, _C_P, _PC, and _PC_P
	macros used for printing debugging messages in the event of test case
	failures.

2009-08-13  Ryan S. Arnold  <rsa@us.ibm.com>

	* Makefile.in: For .out rules send stdout to /dev/null and stderr to
	the .out file.
	* tests/test-printf.c: Added framework for generically adding printf tests.
	* Makefile.gdb: Squelch echos of .conf and .gdb file creation.

2009-08-13  Ryan S. Arnold  <rsa@us.ibm.com>

	* Makefile.in: Change test-debug to > debug-test.
	* tests/debug-test.sh: Change test-debug.conf -> debug-test.conf.
	* Makefile.gdb: Change test-debug to debug-test.


2009-09-13  Ryan S. Arnold  <rsa@us.ibm.com>

	* tests/test-debug.sh: Removed and renamed to ...
	* tests/debug-test.sh: New.

2009-08-13  Ryan S. Arnold  <rsa@us.ibm.com>

	* CONTRIBUTORS: Added Carlos Eduardo Seo for contribution of
	Makefile.in make install and make install-headers feature.
	* README: Added section on Make Rules.
	* TODO: Added additional todo items.

2009-08-12  Carlos Eduardo Seo  <cseo@linux.vnet.ibm.com>

	* Makefile.in: Added 'make install0headers' feature.

2009-08-12  Ryan S. Arnold  <rsa@us.ibm.com>

	* printf_dfp.c: (padn, wpadn): Changed usage of size_t to 'int' to
	avoid compiler warnings about unsigned to signed comparisons.

2009-08-12  Ryan S. Arnold  <rsa@us.ibm.com>

	* tests/test-printf.c: Added print statements for _Decimal32 and
	_Decimal128.
	* sysdeps/powerpc/dfpu/numdigits.h (numdigits getexp): Use FUNC_D
	wrapper.
	(FUNC_D PASTE): Conditionally define these macros.

2009-08-11  Andreas Krebbel  <krebbel@linux.vnet.ibm.com>

	* include/printf_dfp.h (__d32_ais, __d64_ais, __d128_ais): Removed
	* printf_dfp.c (__printf_dfp): Changed width from unsigned into to
	int in order to prevent negative default.
	(__register_printf_dfp): Replaced individual decimal sized
	specifier registrations with a unified registrations.
	(__d32_ais, __d64_ais, __d128_ais): Removed and replaced with unified
	__dfp_ais().


2009-08-11  Andreas Krebbel  <krebbel@linux.vnet.ibm.com>

	* ieee754r/ldexpd32.c (ldexpd32): Use FUNC_D wrapper around getexp.
	* ieee754r/frexpd32.c (frexpd32): Use FUNC_D wrapper around numdigits
	and getexp.
	* sysdeps/soft-dfp/dpd/numdigits.h (numdigits getexp): Use FUNC_D
	wrapper.

2009-08-11  Carlos Eduardo Seo  <cseo@linux.vnet.ibm.com>

	* Makefile.in: Added 'make install' feature.

2009-08-04  Andreas Krebbel  <krebbel@linux.vnet.ibm.com>

	* include/printf_dfp.h: Add #include <stdardg.h>.
	* sysdeps/s390/dfpu/numdigits.h: Wrap function definitions in FUNC_D
	macro. Add PASTE and FUNC_D macro definitions.
	* strtod32.c (setexp): Refer to 'getexp' using FUNC_D() macro. Add
	PASTE and FUNC_D macro definitions.  Reposition dfp*_private.h header
	inclusions.

2009-08-05  Ryan S. Arnold  <rsa@us.ibm.com>

General non-functiopnal maintenance.

	* Makefile.in: Cleanup comments.
	* README: Fix typo, spacings, and text.

2009-08-05  Ryan S. Arnold  <rsa@us.ibm.com>

This commit adds the port of libdfp from a GLIBC add-on to a standalone
library.  This library was written by Ryan S. Arnold <rsa@us.ibm.com>, Joseph
Kerian <kerian@us.ibm.com>, Pete Eberlein <eberlein@us.ibm.com>, Steve Munroe
<munroesj@us.ibm.com>, Andreas Krebbel <krebbel@de.ibm.com>, et al.

	* trunk/configure: Generated by the maintainer using autoreconf -i.
	* trunk/Makefile.in: GNU Make Makefile, since automake is too naive
	for system libraries.
	* trunk/dfptypeconv128.h: Prototypes.
	* trunk/fmt_d64.c
	* trunk/config.log
	* trunk/libbid
	* trunk/libbid/configure.ac: Stub necessary to keep autoreconf from
	complaining.  This file is currently waiting to be implemented.
	* trunk/libbid/README
	* trunk/scripts: Necessary autoconf scripts.
	* trunk/scripts/firstversions.awk
	* trunk/scripts/move-if-change
	* trunk/scripts/depcomp
	* trunk/scripts/compile
	* trunk/scripts/versions.awk
	* trunk/scripts/missing
	* trunk/scripts/config.guess
	* trunk/scripts/README
	* trunk/scripts/config.sub
	* trunk/scripts/install-sh
	* trunk/ieee754r: This is a convenience directory that holds the
	ieee754r function implementations as required by the DFP ISO C TR.
	* trunk/ieee754r/samequantumd128.c
	* trunk/ieee754r/atand64.c
	* trunk/ieee754r/asinhd128.c
	* trunk/ieee754r/tgammad128.c
	* trunk/ieee754r/sqrtd64.c
	* trunk/ieee754r/quantized32.c
	* trunk/ieee754r/expd64.c
	* trunk/ieee754r/scalbnd32.c
	* trunk/ieee754r/isgreaterequald128.c
	* trunk/ieee754r/fpclassifyd32.c
	* trunk/ieee754r/finited128.c
	* trunk/ieee754r/nextafterd64.c
	* trunk/ieee754r/fdimd128.c
	* trunk/ieee754r/islessd64.c
	* trunk/ieee754r/isinfd32.c
	* trunk/ieee754r/isunorderedd128.c
	* trunk/ieee754r/scalblnd32.c
	* trunk/ieee754r/logd32.c
	* trunk/ieee754r/atanhd128.c
	* trunk/ieee754r/copysignd128.c
	* trunk/ieee754r/exp2d64.c
	* trunk/ieee754r/acosd32.c
	* trunk/ieee754r/islessd128.c
	* trunk/ieee754r/sind32.c
	* trunk/ieee754r/fmodd64.c
	* trunk/ieee754r/cbrtd32.c
	* trunk/ieee754r/truncd32.c
	* trunk/ieee754r/remainderd128.c
	* trunk/ieee754r/roundd64.c
	* trunk/ieee754r/isnand128.c
	* trunk/ieee754r/asind64.c
	* trunk/ieee754r/fmaxd64.c
	* trunk/ieee754r/ilogbd64.c
	* trunk/ieee754r/islessgreaterd128.c
	* trunk/ieee754r/samequantumd64.c
	* trunk/ieee754r/llroundd128.c
	* trunk/ieee754r/fmad64.c
	* trunk/ieee754r/atand128.c
	* trunk/ieee754r/acosd128.c
	* trunk/ieee754r/islessgreaterd32.c
	* trunk/ieee754r/asind128.c
	* trunk/ieee754r/fabsd64.c
	* trunk/ieee754r/floord32.c
	* trunk/ieee754r/erfd64.c
	* trunk/ieee754r/isunorderedd32.c
	* trunk/ieee754r/nexttowardd128.c
	* trunk/ieee754r/modfd32.c
	* trunk/ieee754r/signbitd128.c
	* trunk/ieee754r/lrintd32.c
	* trunk/ieee754r/fmind32.c
	* trunk/ieee754r/copysignd32.c
	* trunk/ieee754r/atanhd32.c
	* trunk/ieee754r/acoshd32.c
	* trunk/ieee754r/islessequald64.c
	* trunk/ieee754r/expm1d64.c
	* trunk/ieee754r/asinhd32.c
	* trunk/ieee754r/rintd128.c
	* trunk/ieee754r/scalblnd128.c
	* trunk/ieee754r/atan2d32.c
	* trunk/ieee754r/hypotd64.c
	* trunk/ieee754r/llrintd64.c
	* trunk/ieee754r/powd64.c
	* trunk/ieee754r/modfd128.c
	* trunk/ieee754r/rintd32.c
	* trunk/ieee754r/isnand64.c
	* trunk/ieee754r/islessequald128.c
	* trunk/ieee754r/expm1d128.c
	* trunk/ieee754r/fmaxd128.c
	* trunk/ieee754r/ldexpd64.c
	* trunk/ieee754r/nand64.c
	* trunk/ieee754r/expd128.c
	* trunk/ieee754r/acoshd128.c
	* trunk/ieee754r/atand32.c
	* trunk/ieee754r/fdimd64.c
	* trunk/ieee754r/log10d64.c
	* trunk/ieee754r/sinhd128.c
	* trunk/ieee754r/isnormald64.c
	* trunk/ieee754r/fmad128.c
	* trunk/ieee754r/sqrtd32.c
	* trunk/ieee754r/cosd64.c
	* trunk/ieee754r/atan2d128.c
	* trunk/ieee754r/expd32.c
	* trunk/ieee754r/tanhd64.c
	* trunk/ieee754r/nearbyintd64.c
	* trunk/ieee754r/nextafterd32.c
	* trunk/ieee754r/coshd64.c
	* trunk/ieee754r/fabsd128.c
	* trunk/ieee754r/islessd32.c
	* trunk/ieee754r/lgammad64.c
	* trunk/ieee754r/sinhd64.c
	* trunk/ieee754r/log10d128.c
	* trunk/ieee754r/log2d64.c
	* trunk/ieee754r/tgammad64.c
	* trunk/ieee754r/exp2d32.c
	* trunk/ieee754r/tanhd128.c
	* trunk/ieee754r/ilogbd128.c
	* trunk/ieee754r/finited64.c
	* trunk/ieee754r/llroundd64.c
	* trunk/ieee754r/fmodd32.c
	* trunk/ieee754r/quantized128.c
	* trunk/ieee754r/roundd32.c
	* trunk/ieee754r/hypotd128.c
	* trunk/ieee754r/asind32.c
	* trunk/ieee754r/isgreaterd64.c
	* trunk/ieee754r/fmaxd32.c
	* trunk/ieee754r/ilogbd32.c
	* trunk/ieee754r/isinfd128.c
	* trunk/ieee754r/samequantumd32.c
	* trunk/ieee754r/erfd128.c
	* trunk/ieee754r/fmad32.c
	* trunk/ieee754r/nexttowardd64.c
	* trunk/ieee754r/signbitd64.c
	* trunk/ieee754r/lroundd64.c
	* trunk/ieee754r/fabsd32.c
	* trunk/ieee754r/remainderd64.c
	* trunk/ieee754r/fmodd128.c
	* trunk/ieee754r/erfd32.c
	* trunk/ieee754r/nearbyintd128.c
	* trunk/ieee754r/ceild64.c
	* trunk/ieee754r/isgreaterequald64.c
	* trunk/ieee754r/Makefile
	* trunk/ieee754r/log1pd64.c
	* trunk/ieee754r/tand64.c
	* trunk/ieee754r/logbd64.c
	* trunk/ieee754r/log2d128.c
	* trunk/ieee754r/frexpd64.c
	* trunk/ieee754r/llrintd128.c
	* trunk/ieee754r/islessequald32.c
	* trunk/ieee754r/expm1d32.c
	* trunk/ieee754r/ldexpd128.c
	* trunk/ieee754r/nand128.c
	* trunk/ieee754r/hypotd32.c
	* trunk/ieee754r/llrintd32.c
	* trunk/ieee754r/exp2d128.c
	* trunk/ieee754r/quantized64.c
	* trunk/ieee754r/powd32.c
	* trunk/ieee754r/scalbnd64.c
	* trunk/ieee754r/logd128.c
	* trunk/ieee754r/tand128.c
	* trunk/ieee754r/fpclassifyd64.c
	* trunk/ieee754r/log1pd128.c
	* trunk/ieee754r/isnand32.c
	* trunk/ieee754r/isnormald128.c
	* trunk/ieee754r/cosd128.c
	* trunk/ieee754r/nand32.c
	* trunk/ieee754r/ldexpd32.c
	* trunk/ieee754r/isinfd64.c
	* trunk/ieee754r/lrintd128.c
	* trunk/ieee754r/fdimd32.c
	* trunk/ieee754r/sind128.c
	* trunk/ieee754r/coshd128.c
	* trunk/ieee754r/log10d32.c
	* trunk/ieee754r/scalblnd64.c
	* trunk/ieee754r/cosd32.c
	* trunk/ieee754r/isnormald32.c
	* trunk/ieee754r/logd64.c
	* trunk/ieee754r/scalbnd128.c
	* trunk/ieee754r/lroundd128.c
	* trunk/ieee754r/acosd64.c
	* trunk/ieee754r/tanhd32.c
	* trunk/ieee754r/powd128.c
	* trunk/ieee754r/nearbyintd32.c
	* trunk/ieee754r/coshd32.c
	* trunk/ieee754r/lgammad32.c
	* trunk/ieee754r/sind64.c
	* trunk/ieee754r/cbrtd64.c
	* trunk/ieee754r/truncd64.c
	* trunk/ieee754r/sinhd32.c
	* trunk/ieee754r/log2d32.c
	* trunk/ieee754r/tgammad32.c
	* trunk/ieee754r/floord128.c
	* trunk/ieee754r/logbd128.c
	* trunk/ieee754r/roundd128.c
	* trunk/ieee754r/finited32.c
	* trunk/ieee754r/llroundd32.c
	* trunk/ieee754r/fmind128.c
	* trunk/ieee754r/cbrtd128.c
	* trunk/ieee754r/islessgreaterd64.c
	* trunk/ieee754r/isgreaterd32.c
	* trunk/ieee754r/floord64.c
	* trunk/ieee754r/nextafterd128.c
	* trunk/ieee754r/isunorderedd64.c
	* trunk/ieee754r/fpclassifyd128.c
	* trunk/ieee754r/modfd64.c
	* trunk/ieee754r/lrintd64.c
	* trunk/ieee754r/fmind64.c
	* trunk/ieee754r/signbitd32.c
	* trunk/ieee754r/nexttowardd32.c
	* trunk/ieee754r/copysignd64.c
	* trunk/ieee754r/atanhd64.c
	* trunk/ieee754r/acoshd64.c
	* trunk/ieee754r/ceild128.c
	* trunk/ieee754r/lroundd32.c
	* trunk/ieee754r/remainderd32.c
	* trunk/ieee754r/asinhd64.c
	* trunk/ieee754r/atan2d64.c
	* trunk/ieee754r/frexpd128.c
	* trunk/ieee754r/isgreaterd128.c
	* trunk/ieee754r/ceild32.c
	* trunk/ieee754r/isgreaterequald32.c
	* trunk/ieee754r/Versions
	* trunk/ieee754r/sqrtd128.c
	* trunk/ieee754r/rintd64.c
	* trunk/ieee754r/truncd128.c
	* trunk/ieee754r/tand32.c
	* trunk/ieee754r/log1pd32.c
	* trunk/ieee754r/logbd32.c
	* trunk/ieee754r/lgammad128.c
	* trunk/ieee754r/frexpd32.c
	* trunk/wcstod32.c
	* trunk/config.guess
	* trunk/libdecnumber: This is out-of-tree maintained libdecnumber
	backend directory.  This source is maintained in GCC.
	* trunk/libdecnumber/decDPDSymbols.h.back
	* trunk/libdecnumber/configure
	* trunk/libdecnumber/Makefile.in
	* trunk/libdecnumber/decDPDSymbols.h
	* trunk/libdecnumber/decRound.c
	* trunk/libdecnumber/decDoubleSymbols.h
	* trunk/libdecnumber/decExcept.c
	* trunk/libdecnumber/decNumber.c
	* trunk/libdecnumber/decRound.h
	* trunk/libdecnumber/decExcept.h
	* trunk/libdecnumber/decNumber.h
	* trunk/libdecnumber/bid
	* trunk/libdecnumber/bid/decimal128.h
	* trunk/libdecnumber/bid/bid2dpd_dpd2bid.c
	* trunk/libdecnumber/bid/decimal32.c
	* trunk/libdecnumber/bid/bid2dpd_dpd2bid.h
	* trunk/libdecnumber/bid/decimal128Symbols.h
	* trunk/libdecnumber/bid/bid-dpd.h
	* trunk/libdecnumber/bid/decimal32.h
	* trunk/libdecnumber/bid/decimal64.c
	* trunk/libdecnumber/bid/decimal128Local.h
	* trunk/libdecnumber/bid/host-ieee128.c
	* trunk/libdecnumber/bid/decimal64.h
	* trunk/libdecnumber/bid/decimal32Symbols.h
	* trunk/libdecnumber/bid/decimal64Symbols.h
	* trunk/libdecnumber/bid/host-ieee32.c
	* trunk/libdecnumber/bid/decimal128.c
	* trunk/libdecnumber/bid/host-ieee64.c
	* trunk/libdecnumber/decContextSymbols.h
	* trunk/libdecnumber/decLibrary.c
	* trunk/libdecnumber/decNumberSymbols.h.back
	* trunk/libdecnumber/decCommonSymbols.h
	* trunk/libdecnumber/configure.ac
	* trunk/libdecnumber/decNumberLocal.h
	* trunk/libdecnumber/decQuadSymbols.h
	* trunk/libdecnumber/decDouble.c
	* trunk/libdecnumber/config.in
	* trunk/libdecnumber/decDouble.h
	* trunk/libdecnumber/decSingle.c
	* trunk/libdecnumber/decContext.c
	* trunk/libdecnumber/decSingle.h
	* trunk/libdecnumber/decPacked.c
	* trunk/libdecnumber/decDoubleSymbols.h.back
	* trunk/libdecnumber/decCommon.c
	* trunk/libdecnumber/decContext.h
	* trunk/libdecnumber/decQuad.c
	* trunk/libdecnumber/ChangeLog
	* trunk/libdecnumber/decPacked.h
	* trunk/libdecnumber/decSingleSymbols.h.back
	* trunk/libdecnumber/decSingleSymbols.h
	* trunk/libdecnumber/decQuad.h
	* trunk/libdecnumber/decContextSymbols.h.back
	* trunk/libdecnumber/dconfig.h
	* trunk/libdecnumber/decPackedSymbols.h.back
	* trunk/libdecnumber/decPackedSymbols.h
	* trunk/libdecnumber/decCommonSymbols.h.back
	* trunk/libdecnumber/decNumberSymbols.h
	* trunk/libdecnumber/autom4te.cache
	* trunk/libdecnumber/autom4te.cache/traces.0
	* trunk/libdecnumber/autom4te.cache/traces.1
	* trunk/libdecnumber/autom4te.cache/traces.2
	* trunk/libdecnumber/autom4te.cache/traces.3
	* trunk/libdecnumber/autom4te.cache/traces.4
	* trunk/libdecnumber/autom4te.cache/output.3t
	* trunk/libdecnumber/autom4te.cache/output.5t
	* trunk/libdecnumber/autom4te.cache/output.0
	* trunk/libdecnumber/autom4te.cache/output.1
	* trunk/libdecnumber/autom4te.cache/output.2
	* trunk/libdecnumber/autom4te.cache/output.3
	* trunk/libdecnumber/autom4te.cache/output.4
	* trunk/libdecnumber/autom4te.cache/traces.3t
	* trunk/libdecnumber/autom4te.cache/traces.5t
	* trunk/libdecnumber/autom4te.cache/requests
	* trunk/libdecnumber/decQuadSymbols.h.back
	* trunk/libdecnumber/dpd
	* trunk/libdecnumber/dpd/decimal128.h
	* trunk/libdecnumber/dpd/decimal32Symbols.h.back
	* trunk/libdecnumber/dpd/decimal32Symbols.h
	* trunk/libdecnumber/dpd/decimal32.c
	* trunk/libdecnumber/dpd/decimal64Symbols.h.back
	* trunk/libdecnumber/dpd/decimal64Symbols.h
	* trunk/libdecnumber/dpd/decimal128Symbols.h.back
	* trunk/libdecnumber/dpd/decimal128Symbols.h
	* trunk/libdecnumber/dpd/decimal32.h
	* trunk/libdecnumber/dpd/decimal64.c
	* trunk/libdecnumber/dpd/decimal128.c
	* trunk/libdecnumber/dpd/decimal128Local.h
	* trunk/libdecnumber/dpd/decimal64.h
	* trunk/libdecnumber/decDPD.h
	* trunk/libdecnumber/aclocal.m4
	* trunk/libdecnumber/decBasic.c
	* trunk/strtod128.c
	* trunk/CONTRIBUTORS
	* trunk/config.sub
	* trunk/dfptypeconv64.h
	* trunk/base-math: Convenience directory for generic arithmetic,
	conversion, and comparison functions.
	* trunk/base-math/eqdd2.c
	* trunk/base-math/fixunstdsi.c
	* trunk/base-math/floatunsditd.c
	* trunk/base-math/subsd3.c
	* trunk/base-math/gesd2.c
	* trunk/base-math/subtd3.c
	* trunk/base-math/getd2.c
	* trunk/base-math/mulsd3.c
	* trunk/base-math/multd3.c
	* trunk/base-math/extendsddd2.c
	* trunk/base-math/floatdisd.c
	* trunk/base-math/fixtdsi.c
	* trunk/base-math/truncddsd2.c
	* trunk/base-math/trunctddd2.c
	* trunk/base-math/floatunssisd.c
	* trunk/base-math/eqsd2.c
	* trunk/base-math/eqtd2.c
	* trunk/base-math/adddd3.c
	* trunk/base-math/extendsdtd2.c
	* trunk/base-math/trunctdsd2.c
	* trunk/base-math/Makefile
	* trunk/base-math/floatunsdisd.c
	* trunk/base-math/addsd3.c
	* trunk/base-math/addtd3.c
	* trunk/base-math/ltdd2.c
	* trunk/base-math/fixunssddi.c
	* trunk/base-math/unorddd2.c
	* trunk/base-math/ltsd2.c
	* trunk/base-math/lttd2.c
	* trunk/base-math/fixsddi.c
	* trunk/base-math/ledd2.c
	* trunk/base-math/nedd2.c
	* trunk/base-math/unordsd2.c
	* trunk/base-math/unordtd2.c
	* trunk/base-math/fixunsdddi.c
	* trunk/base-math/floatsidd.c
	* trunk/base-math/lesd2.c
	* trunk/base-math/extendddtd2.c
	* trunk/base-math/letd2.c
	* trunk/base-math/nesd2.c
	* trunk/base-math/fixdddi.c
	* trunk/base-math/netd2.c
	* trunk/base-math/divdd3.c
	* trunk/base-math/fixunstddi.c
	* trunk/base-math/floatsitd.c
	* trunk/base-math/floatdidd.c
	* trunk/base-math/fixtddi.c
	* trunk/base-math/divsd3.c
	* trunk/base-math/divtd3.c
	* trunk/base-math/fixunssdsi.c
	* trunk/base-math/floatunssidd.c
	* trunk/base-math/gtdd2.c
	* trunk/base-math/fixsdsi.c
	* trunk/base-math/floatditd.c
	* trunk/base-math/README
	* trunk/base-math/floatunssitd.c
	* trunk/base-math/floatunsdidd.c
	* trunk/base-math/fixunsddsi.c
	* trunk/base-math/gtsd2.c
	* trunk/base-math/gttd2.c
	* trunk/base-math/subdd3.c
	* trunk/base-math/gedd2.c
	* trunk/base-math/Versions
	* trunk/base-math/muldd3.c
	* trunk/base-math/floatsisd.c
	* trunk/base-math/fixddsi.c
	* trunk/tests: Make check framework directory.
	* trunk/tests/test-printf.c
	* trunk/tests/test-debug.sh
	* trunk/tests/README
	* trunk/configure.ac
	* trunk/decode.c
	* trunk/strtod64.c
	* trunk/decNumberMath: Convenience directory for libdecnumber
	extension routines.
	* trunk/decNumberMath/decNumberMath.c
	* trunk/decNumberMath/decNumberMath.h
	* trunk/decNumberMath/Versions
	* trunk/decNumberMath/Makefile
	* trunk/decNumberMath/README
	* trunk/fmt_d32.c
	* trunk/wcstod128.c
	* trunk/dfptypeconv.c
	* trunk/include: Headers used by libdfp.
	* trunk/include/dfpmacro.h
	* trunk/include/printf_dfp.h
	* trunk/include/gstdint.h
	* trunk/include/fmt_dfp.h
	* trunk/include/dfpacc.h
	* trunk/include/get_digits.h
	* trunk/include/dfpfenv_private.h
	* trunk/include/ieee754r_private.h
	* trunk/include/decode.h
	* trunk/include/dfpstdlib_private.h
	* trunk/include/libdfp-symbols.h
	* trunk/include/README
	* trunk/include/sysdep.h
	* trunk/include/dfpwchar_private.h
	* trunk/COPYING.txt
	* trunk/ChangeLog
	* trunk/numdigits.h
	* trunk/sysdeps: Architecture specific overrides.
	* trunk/sysdeps/powerpc
	* trunk/sysdeps/powerpc/powerpc32
	* trunk/sysdeps/powerpc/powerpc32/power6
	* trunk/sysdeps/powerpc/powerpc32/power6/fpu
	* trunk/sysdeps/powerpc/powerpc32/power6/fpu/eqsd2.S
	* trunk/sysdeps/powerpc/powerpc32/power6/fpu/floatunssisd.S
	* trunk/sysdeps/powerpc/powerpc32/power6/fpu/eqtd2.S
	* trunk/sysdeps/powerpc/powerpc32/power6/fpu/adddd3.S
	* trunk/sysdeps/powerpc/powerpc32/power6/fpu/extendsdtd2.S
	* trunk/sysdeps/powerpc/powerpc32/power6/fpu/trunctdsd2.S
	* trunk/sysdeps/powerpc/powerpc32/power6/fpu/floatunsdisd.S
	* trunk/sysdeps/powerpc/powerpc32/power6/fpu/addsd3.S
	* trunk/sysdeps/powerpc/powerpc32/power6/fpu/addtd3.S
	* trunk/sysdeps/powerpc/powerpc32/power6/fpu/ltdd2.S
	* trunk/sysdeps/powerpc/powerpc32/power6/fpu/Makefile
	* trunk/sysdeps/powerpc/powerpc32/power6/fpu/fixunssddi.S
	* trunk/sysdeps/powerpc/powerpc32/power6/fpu/unorddd2.S
	* trunk/sysdeps/powerpc/powerpc32/power6/fpu/ltsd2.S
	* trunk/sysdeps/powerpc/powerpc32/power6/fpu/lttd2.S
	* trunk/sysdeps/powerpc/powerpc32/power6/fpu/fixsddi.S
	* trunk/sysdeps/powerpc/powerpc32/power6/fpu/ledd2.S
	* trunk/sysdeps/powerpc/powerpc32/power6/fpu/nedd2.S
	* trunk/sysdeps/powerpc/powerpc32/power6/fpu/unordsd2.S
	* trunk/sysdeps/powerpc/powerpc32/power6/fpu/fixunsdddi.S
	* trunk/sysdeps/powerpc/powerpc32/power6/fpu/unordtd2.S
	* trunk/sysdeps/powerpc/powerpc32/power6/fpu/extendddtd2.S
	* trunk/sysdeps/powerpc/powerpc32/power6/fpu/lesd2.S
	* trunk/sysdeps/powerpc/powerpc32/power6/fpu/floatsidd.S
	* trunk/sysdeps/powerpc/powerpc32/power6/fpu/letd2.S
	* trunk/sysdeps/powerpc/powerpc32/power6/fpu/fixdddi.S
	* trunk/sysdeps/powerpc/powerpc32/power6/fpu/nesd2.S
	* trunk/sysdeps/powerpc/powerpc32/power6/fpu/netd2.S
	* trunk/sysdeps/powerpc/powerpc32/power6/fpu/divdd3.S
	* trunk/sysdeps/powerpc/powerpc32/power6/fpu/fixunstddi.S
	* trunk/sysdeps/powerpc/powerpc32/power6/fpu/floatsitd.S
	* trunk/sysdeps/powerpc/powerpc32/power6/fpu/floatdidd.S
	* trunk/sysdeps/powerpc/powerpc32/power6/fpu/fixtddi.S
	* trunk/sysdeps/powerpc/powerpc32/power6/fpu/divsd3.S
	* trunk/sysdeps/powerpc/powerpc32/power6/fpu/divtd3.S
	* trunk/sysdeps/powerpc/powerpc32/power6/fpu/fixunssdsi.S
	* trunk/sysdeps/powerpc/powerpc32/power6/fpu/floatunssidd.S
	* trunk/sysdeps/powerpc/powerpc32/power6/fpu/gtdd2.S
	* trunk/sysdeps/powerpc/powerpc32/power6/fpu/fixsdsi.S
	* trunk/sysdeps/powerpc/powerpc32/power6/fpu/floatditd.S
	* trunk/sysdeps/powerpc/powerpc32/power6/fpu/floatunssitd.S
	* trunk/sysdeps/powerpc/powerpc32/power6/fpu/floatunsdidd.S
	* trunk/sysdeps/powerpc/powerpc32/power6/fpu/fixunsddsi.S
	* trunk/sysdeps/powerpc/powerpc32/power6/fpu/gtsd2.S
	* trunk/sysdeps/powerpc/powerpc32/power6/fpu/gttd2.S
	* trunk/sysdeps/powerpc/powerpc32/power6/fpu/subdd3.S
	* trunk/sysdeps/powerpc/powerpc32/power6/fpu/gedd2.S
	* trunk/sysdeps/powerpc/powerpc32/power6/fpu/floatsisd.S
	* trunk/sysdeps/powerpc/powerpc32/power6/fpu/muldd3.S
	* trunk/sysdeps/powerpc/powerpc32/power6/fpu/fixddsi.S
	* trunk/sysdeps/powerpc/powerpc32/power6/fpu/eqdd2.S
	* trunk/sysdeps/powerpc/powerpc32/power6/fpu/fixunstdsi.S
	* trunk/sysdeps/powerpc/powerpc32/power6/fpu/floatunsditd.S
	* trunk/sysdeps/powerpc/powerpc32/power6/fpu/subsd3.S
	* trunk/sysdeps/powerpc/powerpc32/power6/fpu/gesd2.S
	* trunk/sysdeps/powerpc/powerpc32/power6/fpu/subtd3.S
	* trunk/sysdeps/powerpc/powerpc32/power6/fpu/getd2.S
	* trunk/sysdeps/powerpc/powerpc32/power6/fpu/mulsd3.S
	* trunk/sysdeps/powerpc/powerpc32/power6/fpu/Versions
	* trunk/sysdeps/powerpc/powerpc32/power6/fpu/multd3.S
	* trunk/sysdeps/powerpc/powerpc32/power6/fpu/extendsddd2.S
	* trunk/sysdeps/powerpc/powerpc32/power6/fpu/floatdisd.S
	* trunk/sysdeps/powerpc/powerpc32/power6/fpu/fixtdsi.S
	* trunk/sysdeps/powerpc/powerpc32/power6/fpu/truncddsd2.S
	* trunk/sysdeps/powerpc/powerpc32/power6/fpu/trunctddd2.S
	* trunk/sysdeps/powerpc/powerpc32/sysdep.h
	* trunk/sysdeps/powerpc/nofpu
	* trunk/sysdeps/powerpc/nofpu/bits
	* trunk/sysdeps/powerpc/nofpu/bits/fenvinline.h
	* trunk/sysdeps/powerpc/nofpu/bits/README
	* trunk/sysdeps/powerpc/powerpc64
	* trunk/sysdeps/powerpc/powerpc64/power6
	* trunk/sysdeps/powerpc/powerpc64/power6/fpu
	* trunk/sysdeps/powerpc/powerpc64/power6/fpu/eqsd2.S
	* trunk/sysdeps/powerpc/powerpc64/power6/fpu/floatunssisd.S
	* trunk/sysdeps/powerpc/powerpc64/power6/fpu/eqtd2.S
	* trunk/sysdeps/powerpc/powerpc64/power6/fpu/adddd3.S
	* trunk/sysdeps/powerpc/powerpc64/power6/fpu/extendsdtd2.S
	* trunk/sysdeps/powerpc/powerpc64/power6/fpu/trunctdsd2.S
	* trunk/sysdeps/powerpc/powerpc64/power6/fpu/floatunsdisd.S
	* trunk/sysdeps/powerpc/powerpc64/power6/fpu/addsd3.S
	* trunk/sysdeps/powerpc/powerpc64/power6/fpu/addtd3.S
	* trunk/sysdeps/powerpc/powerpc64/power6/fpu/ltdd2.S
	* trunk/sysdeps/powerpc/powerpc64/power6/fpu/Makefile
	* trunk/sysdeps/powerpc/powerpc64/power6/fpu/fixunssddi.S
	* trunk/sysdeps/powerpc/powerpc64/power6/fpu/unorddd2.S
	* trunk/sysdeps/powerpc/powerpc64/power6/fpu/ltsd2.S
	* trunk/sysdeps/powerpc/powerpc64/power6/fpu/lttd2.S
	* trunk/sysdeps/powerpc/powerpc64/power6/fpu/fixsddi.S
	* trunk/sysdeps/powerpc/powerpc64/power6/fpu/ledd2.S
	* trunk/sysdeps/powerpc/powerpc64/power6/fpu/nedd2.S
	* trunk/sysdeps/powerpc/powerpc64/power6/fpu/unordsd2.S
	* trunk/sysdeps/powerpc/powerpc64/power6/fpu/fixunsdddi.S
	* trunk/sysdeps/powerpc/powerpc64/power6/fpu/unordtd2.S
	* trunk/sysdeps/powerpc/powerpc64/power6/fpu/extendddtd2.S
	* trunk/sysdeps/powerpc/powerpc64/power6/fpu/lesd2.S
	* trunk/sysdeps/powerpc/powerpc64/power6/fpu/floatsidd.S
	* trunk/sysdeps/powerpc/powerpc64/power6/fpu/letd2.S
	* trunk/sysdeps/powerpc/powerpc64/power6/fpu/fixdddi.S
	* trunk/sysdeps/powerpc/powerpc64/power6/fpu/nesd2.S
	* trunk/sysdeps/powerpc/powerpc64/power6/fpu/netd2.S
	* trunk/sysdeps/powerpc/powerpc64/power6/fpu/divdd3.S
	* trunk/sysdeps/powerpc/powerpc64/power6/fpu/fixunstddi.S
	* trunk/sysdeps/powerpc/powerpc64/power6/fpu/floatsitd.S
	* trunk/sysdeps/powerpc/powerpc64/power6/fpu/floatdidd.S
	* trunk/sysdeps/powerpc/powerpc64/power6/fpu/fixtddi.S
	* trunk/sysdeps/powerpc/powerpc64/power6/fpu/divsd3.S
	* trunk/sysdeps/powerpc/powerpc64/power6/fpu/divtd3.S
	* trunk/sysdeps/powerpc/powerpc64/power6/fpu/fixunssdsi.S
	* trunk/sysdeps/powerpc/powerpc64/power6/fpu/floatunssidd.S
	* trunk/sysdeps/powerpc/powerpc64/power6/fpu/gtdd2.S
	* trunk/sysdeps/powerpc/powerpc64/power6/fpu/fixsdsi.S
	* trunk/sysdeps/powerpc/powerpc64/power6/fpu/floatditd.S
	* trunk/sysdeps/powerpc/powerpc64/power6/fpu/floatunssitd.S
	* trunk/sysdeps/powerpc/powerpc64/power6/fpu/floatunsdidd.S
	* trunk/sysdeps/powerpc/powerpc64/power6/fpu/fixunsddsi.S
	* trunk/sysdeps/powerpc/powerpc64/power6/fpu/gtsd2.S
	* trunk/sysdeps/powerpc/powerpc64/power6/fpu/gttd2.S
	* trunk/sysdeps/powerpc/powerpc64/power6/fpu/subdd3.S
	* trunk/sysdeps/powerpc/powerpc64/power6/fpu/gedd2.S
	* trunk/sysdeps/powerpc/powerpc64/power6/fpu/floatsisd.S
	* trunk/sysdeps/powerpc/powerpc64/power6/fpu/muldd3.S
	* trunk/sysdeps/powerpc/powerpc64/power6/fpu/fixddsi.S
	* trunk/sysdeps/powerpc/powerpc64/power6/fpu/eqdd2.S
	* trunk/sysdeps/powerpc/powerpc64/power6/fpu/fixunstdsi.S
	* trunk/sysdeps/powerpc/powerpc64/power6/fpu/floatunsditd.S
	* trunk/sysdeps/powerpc/powerpc64/power6/fpu/subsd3.S
	* trunk/sysdeps/powerpc/powerpc64/power6/fpu/gesd2.S
	* trunk/sysdeps/powerpc/powerpc64/power6/fpu/subtd3.S
	* trunk/sysdeps/powerpc/powerpc64/power6/fpu/getd2.S
	* trunk/sysdeps/powerpc/powerpc64/power6/fpu/mulsd3.S
	* trunk/sysdeps/powerpc/powerpc64/power6/fpu/Versions
	* trunk/sysdeps/powerpc/powerpc64/power6/fpu/multd3.S
	* trunk/sysdeps/powerpc/powerpc64/power6/fpu/extendsddd2.S
	* trunk/sysdeps/powerpc/powerpc64/power6/fpu/floatdisd.S
	* trunk/sysdeps/powerpc/powerpc64/power6/fpu/fixtdsi.S
	* trunk/sysdeps/powerpc/powerpc64/power6/fpu/truncddsd2.S
	* trunk/sysdeps/powerpc/powerpc64/power6/fpu/trunctddd2.S
	* trunk/sysdeps/powerpc/powerpc64/sysdep.h
	* trunk/sysdeps/powerpc/fpu
	* trunk/sysdeps/powerpc/fpu/bits
	* trunk/sysdeps/powerpc/fpu/bits/fenvinline.h
	* trunk/sysdeps/powerpc/fpu/bits/README
	* trunk/sysdeps/powerpc/fpu/fenv_libdfp.h
	* trunk/sysdeps/powerpc/sysdep.h
	* trunk/sysdeps/powerpc/dfpu
	* trunk/sysdeps/powerpc/dfpu/numdigits.h
	* trunk/sysdeps/powerpc/dfpu/fe_decround.c
	* trunk/sysdeps/soft-dfp
	* trunk/sysdeps/soft-dfp/eqdd2.c
	* trunk/sysdeps/soft-dfp/floatunsditd.c
	* trunk/sysdeps/soft-dfp/fixunstdsi.c
	* trunk/sysdeps/soft-dfp/subsd3.c
	* trunk/sysdeps/soft-dfp/subtd3.c
	* trunk/sysdeps/soft-dfp/gesd2.c
	* trunk/sysdeps/soft-dfp/getd2.c
	* trunk/sysdeps/soft-dfp/mulsd3.c
	* trunk/sysdeps/soft-dfp/multd3.c
	* trunk/sysdeps/soft-dfp/extendsddd2.c
	* trunk/sysdeps/soft-dfp/extendsdtf.c
	* trunk/sysdeps/soft-dfp/extendsftd.c
	* trunk/sysdeps/soft-dfp/floatdisd.c
	* trunk/sysdeps/soft-dfp/extenddfdd.c
	* trunk/sysdeps/soft-dfp/fixtdsi.c
	* trunk/sysdeps/soft-dfp/trunctfsd.c
	* trunk/sysdeps/soft-dfp/trunctdsf.c
	* trunk/sysdeps/soft-dfp/truncddsd2.c
	* trunk/sysdeps/soft-dfp/trunctddd2.c
	* trunk/sysdeps/soft-dfp/classify.c
	* trunk/sysdeps/soft-dfp/eqsd2.c
	* trunk/sysdeps/soft-dfp/floatunssisd.c
	* trunk/sysdeps/soft-dfp/eqtd2.c
	* trunk/sysdeps/soft-dfp/adddd3.c
	* trunk/sysdeps/soft-dfp/extendsdtd2.c
	* trunk/sysdeps/soft-dfp/extenddftd.c
	* trunk/sysdeps/soft-dfp/extendddtf.c
	* trunk/sysdeps/soft-dfp/Makefile
	* trunk/sysdeps/soft-dfp/trunctdsd2.c
	* trunk/sysdeps/soft-dfp/floatunsdisd.c
	* trunk/sysdeps/soft-dfp/addsd3.c
	* trunk/sysdeps/soft-dfp/addtd3.c
	* trunk/sysdeps/soft-dfp/extendsfsd.c
	* trunk/sysdeps/soft-dfp/ltdd2.c
	* trunk/sysdeps/soft-dfp/extendtftd.c
	* trunk/sysdeps/soft-dfp/fixunssddi.c
	* trunk/sysdeps/soft-dfp/unorddd2.c
	* trunk/sysdeps/soft-dfp/dpd
	* trunk/sysdeps/soft-dfp/dpd/Versions
	* trunk/sysdeps/soft-dfp/dpd/numdigits.h
	* trunk/sysdeps/soft-dfp/dpd/Makefile
	* trunk/sysdeps/soft-dfp/ltsd2.c
	* trunk/sysdeps/soft-dfp/lttd2.c
	* trunk/sysdeps/soft-dfp/fixsddi.c
	* trunk/sysdeps/soft-dfp/ledd2.c
	* trunk/sysdeps/soft-dfp/nedd2.c
	* trunk/sysdeps/soft-dfp/unordsd2.c
	* trunk/sysdeps/soft-dfp/fixunsdddi.c
	* trunk/sysdeps/soft-dfp/unordtd2.c
	* trunk/sysdeps/soft-dfp/extendddtd2.c
	* trunk/sysdeps/soft-dfp/lesd2.c
	* trunk/sysdeps/soft-dfp/floatsidd.c
	* trunk/sysdeps/soft-dfp/letd2.c
	* trunk/sysdeps/soft-dfp/fixdddi.c
	* trunk/sysdeps/soft-dfp/nesd2.c
	* trunk/sysdeps/soft-dfp/netd2.c
	* trunk/sysdeps/soft-dfp/truncdddf.c
	* trunk/sysdeps/soft-dfp/divdd3.c
	* trunk/sysdeps/soft-dfp/bid
	* trunk/sysdeps/soft-dfp/bid/Versions
	* trunk/sysdeps/soft-dfp/bid/Makefile
	* trunk/sysdeps/soft-dfp/fixunstddi.c
	* trunk/sysdeps/soft-dfp/floatsitd.c
	* trunk/sysdeps/soft-dfp/floatdidd.c
	* trunk/sysdeps/soft-dfp/fixtddi.c
	* trunk/sysdeps/soft-dfp/divsd3.c
	* trunk/sysdeps/soft-dfp/trunctfdd.c
	* trunk/sysdeps/soft-dfp/divtd3.c
	* trunk/sysdeps/soft-dfp/trunctddf.c
	* trunk/sysdeps/soft-dfp/fixunssdsi.c
	* trunk/sysdeps/soft-dfp/floatunssidd.c
	* trunk/sysdeps/soft-dfp/gtdd2.c
	* trunk/sysdeps/soft-dfp/fixsdsi.c
	* trunk/sysdeps/soft-dfp/floatditd.c
	* trunk/sysdeps/soft-dfp/truncsdsf.c
	* trunk/sysdeps/soft-dfp/README
	* trunk/sysdeps/soft-dfp/trunctdtf.c
	* trunk/sysdeps/soft-dfp/floatunssitd.c
	* trunk/sysdeps/soft-dfp/floatunsdidd.c
	* trunk/sysdeps/soft-dfp/fixunsddsi.c
	* trunk/sysdeps/soft-dfp/gtsd2.c
	* trunk/sysdeps/soft-dfp/gttd2.c
	* trunk/sysdeps/soft-dfp/subdd3.c
	* trunk/sysdeps/soft-dfp/gedd2.c
	* trunk/sysdeps/soft-dfp/convert.h
	* trunk/sysdeps/soft-dfp/decroundtls.c
	* trunk/sysdeps/soft-dfp/Versions
	* trunk/sysdeps/soft-dfp/extendsfdd.c
	* trunk/sysdeps/soft-dfp/extendsddf.c
	* trunk/sysdeps/soft-dfp/floatsisd.c
	* trunk/sysdeps/soft-dfp/muldd3.c
	* trunk/sysdeps/soft-dfp/fixddsi.c
	* trunk/sysdeps/soft-dfp/decroundtls.h
	* trunk/sysdeps/soft-dfp/truncddsf.c
	* trunk/sysdeps/soft-dfp/truncdfsd.c
	* trunk/sysdeps/dpd
	* trunk/sysdeps/dpd/dpd-private.c
	* trunk/sysdeps/dpd/decode.c
	* trunk/sysdeps/dpd/binpowof10.c
	* trunk/sysdeps/dpd/dpd-private.h
	* trunk/sysdeps/dpd/Versions
	* trunk/sysdeps/dpd/decpowof2.c
	* trunk/sysdeps/dpd/Makefile
	* trunk/sysdeps/bid
	* trunk/sysdeps/bid/bid-private.c
	* trunk/sysdeps/bid/Versions
	* trunk/sysdeps/bid/Makefile
	* trunk/sysdeps/s390
	* trunk/sysdeps/s390/dfpu
	* trunk/sysdeps/s390/dfpu/fenv_libdfp.h
	* trunk/sysdeps/s390/dfpu/numdigits.h
	* trunk/sysdeps/s390/dfpu/fe_decround.c
	* trunk/dfptypeconv32.h
	* trunk/README
	* trunk/fe_decround.c
	* trunk/wcstod64.c
	* trunk/config.h.in
	* trunk/autom4te.cache
	* trunk/autom4te.cache/output.1
	* trunk/autom4te.cache/traces.0
	* trunk/autom4te.cache/traces.1
	* trunk/autom4te.cache/requests
	* trunk/autom4te.cache/output.0
	* trunk/Versions.def
	* trunk/config
	* trunk/config/stdint.m4
	* trunk/config/warnings.m4
	* trunk/config/README
	* trunk/config/override.m4
	* trunk/TODO
	* trunk/fmt_d128.c
	* trunk/strtod32.c
	* trunk/mapround.c
	* trunk/Makefile.gdb
	* trunk/Versions
	* trunk/dfp: Headers used and installed by libdfp.
	* trunk/dfp/dfp.h
	* trunk/dfp/math.h
	* trunk/dfp/fenv.h
	* trunk/dfp/stdlib.h
	* trunk/dfp/wchar.h
	* trunk/dfp/README
	* trunk/old_printf_dfp.c
	* trunk/mapround.h
	* trunk/printf_dfp.c
	* trunk/install-sh

-

2009-07-22  Ryan S. Arnold  <rsa@us.ibm.com>

This commit adds the top-level sub-directories for the stand-alone libdfp
project.  It adds the top-level directory libdfp/ per Mark Mitchell's
direction on patches@eglibc.org on Mon, 29 Jun 2009.

	* libdfp: New.
	* libdfp/trunk: New.
